Search.setIndex({"docnames": ["getting_started/index", "index", "nml/index", "nml/matrix/index", "nml/matrix/mat2", "nml/matrix/mat2/constructor", "nml/matrix/mat2/constructor_float", "nml/matrix/mat2/constructor_float_float_float_float", "nml/matrix/mat2/constructor_float_float_vec2", "nml/matrix/mat2/constructor_vec2_float_float", "nml/matrix/mat2/constructor_vec2_vec2", "nml/matrix/mat2/data", "nml/matrix/mat2/det", "nml/matrix/mat2/operator_brackets_ref", "nml/matrix/mat2/operator_brackets_value", "nml/matrix/mat2/operator_divide_equal_float", "nml/matrix/mat2/operator_minus_equal_mat2", "nml/matrix/mat2/operator_plus_equal_mat2", "nml/matrix/mat2/operator_times_equal_float", "nml/matrix/mat2/operator_times_equal_mat2", "nml/matrix/mat3", "nml/matrix/mat3/constructor", "nml/matrix/mat3/constructor_float", "nml/matrix/mat3/constructor_float_float_float_float_float_float_float_float_float", "nml/matrix/mat3/constructor_float_float_float_float_float_float_vec3", "nml/matrix/mat3/constructor_float_float_float_vec3_float_float_float", "nml/matrix/mat3/constructor_float_float_float_vec3_vec3", "nml/matrix/mat3/constructor_vec3_float_float_float_float_float_float", "nml/matrix/mat3/constructor_vec3_float_float_float_vec3", "nml/matrix/mat3/constructor_vec3_vec3_float_float_float", "nml/matrix/mat3/constructor_vec3_vec3_vec3", "nml/matrix/mat3/data", "nml/matrix/mat3/det", "nml/matrix/mat3/operator_brackets_ref", "nml/matrix/mat3/operator_brackets_value", "nml/matrix/mat3/operator_divide_equal_float", "nml/matrix/mat3/operator_minus_equal_mat3", "nml/matrix/mat3/operator_plus_equal_mat3", "nml/matrix/mat3/operator_times_equal_float", "nml/matrix/mat3/operator_times_equal_mat3", "nml/matrix/mat4", "nml/matrix/mat4/constructor", "nml/matrix/mat4/constructor_float", "nml/matrix/mat4/constructor_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float", "nml/matrix/mat4/constructor_float_float_float_float_float_float_float_float_vec4", "nml/matrix/mat4/constructor_float_float_float_float_float_float_float_float_vec4_float_float_float_float", "nml/matrix/mat4/constructor_float_float_float_float_float_float_float_float_vec4_vec4", "nml/matrix/mat4/constructor_float_float_float_float_vec4_float_float_float_float_float_float_float_float", "nml/matrix/mat4/constructor_float_float_float_float_vec4_float_float_float_float_vec4", "nml/matrix/mat4/constructor_float_float_float_float_vec4_vec4_float_float_float_float", "nml/matrix/mat4/constructor_float_float_float_float_vec4_vec4_vec4", "nml/matrix/mat4/constructor_vec4_float_float_float_float_float_float_float_float_float_float_float_float", "nml/matrix/mat4/constructor_vec4_float_float_float_float_float_float_float_float_vec4", "nml/matrix/mat4/constructor_vec4_float_float_float_float_vec4_float_float_float_float", "nml/matrix/mat4/constructor_vec4_float_float_float_float_vec4_vec4", "nml/matrix/mat4/constructor_vec4_vec4_float_float_float_float_float_float_float_float", "nml/matrix/mat4/constructor_vec4_vec4_float_float_float_float_vec4", "nml/matrix/mat4/constructor_vec4_vec4_vec4_float_float_float_float", "nml/matrix/mat4/constructor_vec4_vec4_vec4_vec4", "nml/matrix/mat4/data", "nml/matrix/mat4/det", "nml/matrix/mat4/operator_brackets_ref", "nml/matrix/mat4/operator_brackets_value", "nml/matrix/mat4/operator_divide_equal_float", "nml/matrix/mat4/operator_minus_equal_mat4", "nml/matrix/mat4/operator_plus_equal_mat4", "nml/matrix/mat4/operator_times_equal_float", "nml/matrix/mat4/operator_times_equal_mat4", "nml/namespace/nml_conjugate_quat", "nml/namespace/nml_cross_vec3_vec3", "nml/namespace/nml_dot_vec2_vec2", "nml/namespace/nml_dot_vec3_vec3", "nml/namespace/nml_dot_vec4_vec4", "nml/namespace/nml_inverse_mat2", "nml/namespace/nml_inverse_mat3", "nml/namespace/nml_inverse_mat4", "nml/namespace/nml_lookatlh_vec3_vec3_vec3", "nml/namespace/nml_lookatrh_vec3_vec3_vec3", "nml/namespace/nml_normalize_quat", "nml/namespace/nml_normalize_vec2", "nml/namespace/nml_normalize_vec3", "nml/namespace/nml_normalize_vec4", "nml/namespace/nml_operator_divide_mat2_float", "nml/namespace/nml_operator_divide_mat3_float", "nml/namespace/nml_operator_divide_mat4_float", "nml/namespace/nml_operator_divide_quat_float", "nml/namespace/nml_operator_divide_vec2_float", "nml/namespace/nml_operator_divide_vec3_float", "nml/namespace/nml_operator_divide_vec4_float", "nml/namespace/nml_operator_is_equal_mat2_mat2", "nml/namespace/nml_operator_is_equal_mat3_mat3", "nml/namespace/nml_operator_is_equal_mat4_mat4", "nml/namespace/nml_operator_is_equal_quat_quat", "nml/namespace/nml_operator_is_equal_vec2_vec2", "nml/namespace/nml_operator_is_equal_vec3_vec3", "nml/namespace/nml_operator_is_equal_vec4_vec4", "nml/namespace/nml_operator_is_not_equal_mat2_mat2", "nml/namespace/nml_operator_is_not_equal_mat3_mat3", "nml/namespace/nml_operator_is_not_equal_mat4_mat4", "nml/namespace/nml_operator_is_not_equal_quat_quat", "nml/namespace/nml_operator_is_not_equal_vec2_vec2", "nml/namespace/nml_operator_is_not_equal_vec3_vec3", "nml/namespace/nml_operator_is_not_equal_vec4_vec4", "nml/namespace/nml_operator_minus_mat2_mat2", "nml/namespace/nml_operator_minus_mat3_mat3", "nml/namespace/nml_operator_minus_mat4_mat4", "nml/namespace/nml_operator_minus_quat_quat", "nml/namespace/nml_operator_minus_vec2_vec2", "nml/namespace/nml_operator_minus_vec3_vec3", "nml/namespace/nml_operator_minus_vec4_vec4", "nml/namespace/nml_operator_plus_mat2_mat2", "nml/namespace/nml_operator_plus_mat3_mat3", "nml/namespace/nml_operator_plus_mat4_mat4", "nml/namespace/nml_operator_plus_quat_quat", "nml/namespace/nml_operator_plus_vec2_vec2", "nml/namespace/nml_operator_plus_vec3_vec3", "nml/namespace/nml_operator_plus_vec4_vec4", "nml/namespace/nml_operator_times_float_mat2", "nml/namespace/nml_operator_times_float_mat3", "nml/namespace/nml_operator_times_float_mat4", "nml/namespace/nml_operator_times_float_quat", "nml/namespace/nml_operator_times_float_vec2", "nml/namespace/nml_operator_times_float_vec3", "nml/namespace/nml_operator_times_float_vec4", "nml/namespace/nml_operator_times_mat2_float", "nml/namespace/nml_operator_times_mat2_mat2", "nml/namespace/nml_operator_times_mat2_vec2", "nml/namespace/nml_operator_times_mat3_float", "nml/namespace/nml_operator_times_mat3_mat3", "nml/namespace/nml_operator_times_mat3_vec3", "nml/namespace/nml_operator_times_mat4_float", "nml/namespace/nml_operator_times_mat4_mat4", "nml/namespace/nml_operator_times_mat4_vec4", "nml/namespace/nml_operator_times_quat_float", "nml/namespace/nml_operator_times_quat_quat", "nml/namespace/nml_operator_times_vec2_float", "nml/namespace/nml_operator_times_vec3_float", "nml/namespace/nml_operator_times_vec4_float", "nml/namespace/nml_reflect_vec2_vec2", "nml/namespace/nml_reflect_vec3_vec3", "nml/namespace/nml_reflect_vec4_vec4", "nml/namespace/nml_refract_vec2_vec2_float", "nml/namespace/nml_refract_vec3_vec3_float", "nml/namespace/nml_refract_vec4_vec4_float", "nml/namespace/nml_rotate_float", "nml/namespace/nml_rotate_float_vec3", "nml/namespace/nml_scale_vec2", "nml/namespace/nml_scale_vec3", "nml/namespace/nml_to_mat4_quat", "nml/namespace/nml_to_quat_vec3", "nml/namespace/nml_to_string_mat2", "nml/namespace/nml_to_string_mat3", "nml/namespace/nml_to_string_mat4", "nml/namespace/nml_to_string_quat", "nml/namespace/nml_to_string_vec2", "nml/namespace/nml_to_string_vec3", "nml/namespace/nml_to_string_vec4", "nml/namespace/nml_to_vec3_quat", "nml/namespace/nml_translate_vec2", "nml/namespace/nml_translate_vec3", "nml/namespace/nml_transpose_mat2", "nml/namespace/nml_transpose_mat3", "nml/namespace/nml_transpose_mat4", "nml/quaternion/index", "nml/quaternion/quat", "nml/quaternion/quat/constructor", "nml/quaternion/quat/constructor_float_float_float_float", "nml/quaternion/quat/data", "nml/quaternion/quat/length", "nml/quaternion/quat/operator_brackets_ref", "nml/quaternion/quat/operator_brackets_value", "nml/quaternion/quat/operator_divide_equal_float", "nml/quaternion/quat/operator_minus_equal_quat", "nml/quaternion/quat/operator_plus_equal_quat", "nml/quaternion/quat/operator_times_equal_float", "nml/quaternion/quat/operator_times_equal_quat", "nml/vector/index", "nml/vector/vec2", "nml/vector/vec2/constructor", "nml/vector/vec2/constructor_float", "nml/vector/vec2/constructor_float_float", "nml/vector/vec2/data", "nml/vector/vec2/length", "nml/vector/vec2/operator_brackets_ref", "nml/vector/vec2/operator_brackets_value", "nml/vector/vec2/operator_divide_equal_float", "nml/vector/vec2/operator_minus_equal_vec2", "nml/vector/vec2/operator_plus_equal_vec2", "nml/vector/vec2/operator_times_equal_float", "nml/vector/vec3", "nml/vector/vec3/constructor", "nml/vector/vec3/constructor_float", "nml/vector/vec3/constructor_float_float_float", "nml/vector/vec3/constructor_float_vec2", "nml/vector/vec3/constructor_vec2_float", "nml/vector/vec3/data", "nml/vector/vec3/length", "nml/vector/vec3/operator_brackets_ref", "nml/vector/vec3/operator_brackets_value", "nml/vector/vec3/operator_divide_equal_float", "nml/vector/vec3/operator_minus_equal_vec3", "nml/vector/vec3/operator_plus_equal_vec3", "nml/vector/vec3/operator_times_equal_float", "nml/vector/vec4", "nml/vector/vec4/constructor", "nml/vector/vec4/constructor_float", "nml/vector/vec4/constructor_float_float_float_float", "nml/vector/vec4/constructor_float_float_vec2", "nml/vector/vec4/constructor_float_vec2_float", "nml/vector/vec4/constructor_float_vec3", "nml/vector/vec4/constructor_vec2_float_float", "nml/vector/vec4/constructor_vec2_vec2", "nml/vector/vec4/constructor_vec3_float", "nml/vector/vec4/data", "nml/vector/vec4/length", "nml/vector/vec4/operator_brackets_ref", "nml/vector/vec4/operator_brackets_value", "nml/vector/vec4/operator_divide_equal_float", "nml/vector/vec4/operator_minus_equal_vec4", "nml/vector/vec4/operator_plus_equal_vec4", "nml/vector/vec4/operator_times_equal_float"], "filenames": ["getting_started/index.rst", "index.rst", "nml/index.rst", "nml/matrix/index.rst", "nml/matrix/mat2.rst", "nml/matrix/mat2/constructor.rst", "nml/matrix/mat2/constructor_float.rst", "nml/matrix/mat2/constructor_float_float_float_float.rst", "nml/matrix/mat2/constructor_float_float_vec2.rst", "nml/matrix/mat2/constructor_vec2_float_float.rst", "nml/matrix/mat2/constructor_vec2_vec2.rst", "nml/matrix/mat2/data.rst", "nml/matrix/mat2/det.rst", "nml/matrix/mat2/operator_brackets_ref.rst", "nml/matrix/mat2/operator_brackets_value.rst", "nml/matrix/mat2/operator_divide_equal_float.rst", "nml/matrix/mat2/operator_minus_equal_mat2.rst", "nml/matrix/mat2/operator_plus_equal_mat2.rst", "nml/matrix/mat2/operator_times_equal_float.rst", "nml/matrix/mat2/operator_times_equal_mat2.rst", "nml/matrix/mat3.rst", "nml/matrix/mat3/constructor.rst", "nml/matrix/mat3/constructor_float.rst", "nml/matrix/mat3/constructor_float_float_float_float_float_float_float_float_float.rst", "nml/matrix/mat3/constructor_float_float_float_float_float_float_vec3.rst", "nml/matrix/mat3/constructor_float_float_float_vec3_float_float_float.rst", "nml/matrix/mat3/constructor_float_float_float_vec3_vec3.rst", "nml/matrix/mat3/constructor_vec3_float_float_float_float_float_float.rst", "nml/matrix/mat3/constructor_vec3_float_float_float_vec3.rst", "nml/matrix/mat3/constructor_vec3_vec3_float_float_float.rst", "nml/matrix/mat3/constructor_vec3_vec3_vec3.rst", "nml/matrix/mat3/data.rst", "nml/matrix/mat3/det.rst", "nml/matrix/mat3/operator_brackets_ref.rst", "nml/matrix/mat3/operator_brackets_value.rst", "nml/matrix/mat3/operator_divide_equal_float.rst", "nml/matrix/mat3/operator_minus_equal_mat3.rst", "nml/matrix/mat3/operator_plus_equal_mat3.rst", "nml/matrix/mat3/operator_times_equal_float.rst", "nml/matrix/mat3/operator_times_equal_mat3.rst", "nml/matrix/mat4.rst", "nml/matrix/mat4/constructor.rst", "nml/matrix/mat4/constructor_float.rst", "nml/matrix/mat4/constructor_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float.rst", "nml/matrix/mat4/constructor_float_float_float_float_float_float_float_float_vec4.rst", "nml/matrix/mat4/constructor_float_float_float_float_float_float_float_float_vec4_float_float_float_float.rst", "nml/matrix/mat4/constructor_float_float_float_float_float_float_float_float_vec4_vec4.rst", "nml/matrix/mat4/constructor_float_float_float_float_vec4_float_float_float_float_float_float_float_float.rst", "nml/matrix/mat4/constructor_float_float_float_float_vec4_float_float_float_float_vec4.rst", "nml/matrix/mat4/constructor_float_float_float_float_vec4_vec4_float_float_float_float.rst", "nml/matrix/mat4/constructor_float_float_float_float_vec4_vec4_vec4.rst", "nml/matrix/mat4/constructor_vec4_float_float_float_float_float_float_float_float_float_float_float_float.rst", "nml/matrix/mat4/constructor_vec4_float_float_float_float_float_float_float_float_vec4.rst", "nml/matrix/mat4/constructor_vec4_float_float_float_float_vec4_float_float_float_float.rst", "nml/matrix/mat4/constructor_vec4_float_float_float_float_vec4_vec4.rst", "nml/matrix/mat4/constructor_vec4_vec4_float_float_float_float_float_float_float_float.rst", "nml/matrix/mat4/constructor_vec4_vec4_float_float_float_float_vec4.rst", "nml/matrix/mat4/constructor_vec4_vec4_vec4_float_float_float_float.rst", "nml/matrix/mat4/constructor_vec4_vec4_vec4_vec4.rst", "nml/matrix/mat4/data.rst", "nml/matrix/mat4/det.rst", "nml/matrix/mat4/operator_brackets_ref.rst", "nml/matrix/mat4/operator_brackets_value.rst", "nml/matrix/mat4/operator_divide_equal_float.rst", "nml/matrix/mat4/operator_minus_equal_mat4.rst", "nml/matrix/mat4/operator_plus_equal_mat4.rst", "nml/matrix/mat4/operator_times_equal_float.rst", "nml/matrix/mat4/operator_times_equal_mat4.rst", "nml/namespace/nml_conjugate_quat.rst", "nml/namespace/nml_cross_vec3_vec3.rst", "nml/namespace/nml_dot_vec2_vec2.rst", "nml/namespace/nml_dot_vec3_vec3.rst", "nml/namespace/nml_dot_vec4_vec4.rst", "nml/namespace/nml_inverse_mat2.rst", "nml/namespace/nml_inverse_mat3.rst", "nml/namespace/nml_inverse_mat4.rst", "nml/namespace/nml_lookatlh_vec3_vec3_vec3.rst", "nml/namespace/nml_lookatrh_vec3_vec3_vec3.rst", "nml/namespace/nml_normalize_quat.rst", "nml/namespace/nml_normalize_vec2.rst", "nml/namespace/nml_normalize_vec3.rst", "nml/namespace/nml_normalize_vec4.rst", "nml/namespace/nml_operator_divide_mat2_float.rst", "nml/namespace/nml_operator_divide_mat3_float.rst", "nml/namespace/nml_operator_divide_mat4_float.rst", "nml/namespace/nml_operator_divide_quat_float.rst", "nml/namespace/nml_operator_divide_vec2_float.rst", "nml/namespace/nml_operator_divide_vec3_float.rst", "nml/namespace/nml_operator_divide_vec4_float.rst", "nml/namespace/nml_operator_is_equal_mat2_mat2.rst", "nml/namespace/nml_operator_is_equal_mat3_mat3.rst", "nml/namespace/nml_operator_is_equal_mat4_mat4.rst", "nml/namespace/nml_operator_is_equal_quat_quat.rst", "nml/namespace/nml_operator_is_equal_vec2_vec2.rst", "nml/namespace/nml_operator_is_equal_vec3_vec3.rst", "nml/namespace/nml_operator_is_equal_vec4_vec4.rst", "nml/namespace/nml_operator_is_not_equal_mat2_mat2.rst", "nml/namespace/nml_operator_is_not_equal_mat3_mat3.rst", "nml/namespace/nml_operator_is_not_equal_mat4_mat4.rst", "nml/namespace/nml_operator_is_not_equal_quat_quat.rst", "nml/namespace/nml_operator_is_not_equal_vec2_vec2.rst", "nml/namespace/nml_operator_is_not_equal_vec3_vec3.rst", "nml/namespace/nml_operator_is_not_equal_vec4_vec4.rst", "nml/namespace/nml_operator_minus_mat2_mat2.rst", "nml/namespace/nml_operator_minus_mat3_mat3.rst", "nml/namespace/nml_operator_minus_mat4_mat4.rst", "nml/namespace/nml_operator_minus_quat_quat.rst", "nml/namespace/nml_operator_minus_vec2_vec2.rst", "nml/namespace/nml_operator_minus_vec3_vec3.rst", "nml/namespace/nml_operator_minus_vec4_vec4.rst", "nml/namespace/nml_operator_plus_mat2_mat2.rst", "nml/namespace/nml_operator_plus_mat3_mat3.rst", "nml/namespace/nml_operator_plus_mat4_mat4.rst", "nml/namespace/nml_operator_plus_quat_quat.rst", "nml/namespace/nml_operator_plus_vec2_vec2.rst", "nml/namespace/nml_operator_plus_vec3_vec3.rst", "nml/namespace/nml_operator_plus_vec4_vec4.rst", "nml/namespace/nml_operator_times_float_mat2.rst", "nml/namespace/nml_operator_times_float_mat3.rst", "nml/namespace/nml_operator_times_float_mat4.rst", "nml/namespace/nml_operator_times_float_quat.rst", "nml/namespace/nml_operator_times_float_vec2.rst", "nml/namespace/nml_operator_times_float_vec3.rst", "nml/namespace/nml_operator_times_float_vec4.rst", "nml/namespace/nml_operator_times_mat2_float.rst", "nml/namespace/nml_operator_times_mat2_mat2.rst", "nml/namespace/nml_operator_times_mat2_vec2.rst", "nml/namespace/nml_operator_times_mat3_float.rst", "nml/namespace/nml_operator_times_mat3_mat3.rst", "nml/namespace/nml_operator_times_mat3_vec3.rst", "nml/namespace/nml_operator_times_mat4_float.rst", "nml/namespace/nml_operator_times_mat4_mat4.rst", "nml/namespace/nml_operator_times_mat4_vec4.rst", "nml/namespace/nml_operator_times_quat_float.rst", "nml/namespace/nml_operator_times_quat_quat.rst", "nml/namespace/nml_operator_times_vec2_float.rst", "nml/namespace/nml_operator_times_vec3_float.rst", "nml/namespace/nml_operator_times_vec4_float.rst", "nml/namespace/nml_reflect_vec2_vec2.rst", "nml/namespace/nml_reflect_vec3_vec3.rst", "nml/namespace/nml_reflect_vec4_vec4.rst", "nml/namespace/nml_refract_vec2_vec2_float.rst", "nml/namespace/nml_refract_vec3_vec3_float.rst", "nml/namespace/nml_refract_vec4_vec4_float.rst", "nml/namespace/nml_rotate_float.rst", "nml/namespace/nml_rotate_float_vec3.rst", "nml/namespace/nml_scale_vec2.rst", "nml/namespace/nml_scale_vec3.rst", "nml/namespace/nml_to_mat4_quat.rst", "nml/namespace/nml_to_quat_vec3.rst", "nml/namespace/nml_to_string_mat2.rst", "nml/namespace/nml_to_string_mat3.rst", "nml/namespace/nml_to_string_mat4.rst", "nml/namespace/nml_to_string_quat.rst", "nml/namespace/nml_to_string_vec2.rst", "nml/namespace/nml_to_string_vec3.rst", "nml/namespace/nml_to_string_vec4.rst", "nml/namespace/nml_to_vec3_quat.rst", "nml/namespace/nml_translate_vec2.rst", "nml/namespace/nml_translate_vec3.rst", "nml/namespace/nml_transpose_mat2.rst", "nml/namespace/nml_transpose_mat3.rst", "nml/namespace/nml_transpose_mat4.rst", "nml/quaternion/index.rst", "nml/quaternion/quat.rst", "nml/quaternion/quat/constructor.rst", "nml/quaternion/quat/constructor_float_float_float_float.rst", "nml/quaternion/quat/data.rst", "nml/quaternion/quat/length.rst", "nml/quaternion/quat/operator_brackets_ref.rst", "nml/quaternion/quat/operator_brackets_value.rst", "nml/quaternion/quat/operator_divide_equal_float.rst", "nml/quaternion/quat/operator_minus_equal_quat.rst", "nml/quaternion/quat/operator_plus_equal_quat.rst", "nml/quaternion/quat/operator_times_equal_float.rst", "nml/quaternion/quat/operator_times_equal_quat.rst", "nml/vector/index.rst", "nml/vector/vec2.rst", "nml/vector/vec2/constructor.rst", "nml/vector/vec2/constructor_float.rst", "nml/vector/vec2/constructor_float_float.rst", "nml/vector/vec2/data.rst", "nml/vector/vec2/length.rst", "nml/vector/vec2/operator_brackets_ref.rst", "nml/vector/vec2/operator_brackets_value.rst", "nml/vector/vec2/operator_divide_equal_float.rst", "nml/vector/vec2/operator_minus_equal_vec2.rst", "nml/vector/vec2/operator_plus_equal_vec2.rst", "nml/vector/vec2/operator_times_equal_float.rst", "nml/vector/vec3.rst", "nml/vector/vec3/constructor.rst", "nml/vector/vec3/constructor_float.rst", "nml/vector/vec3/constructor_float_float_float.rst", "nml/vector/vec3/constructor_float_vec2.rst", "nml/vector/vec3/constructor_vec2_float.rst", "nml/vector/vec3/data.rst", "nml/vector/vec3/length.rst", "nml/vector/vec3/operator_brackets_ref.rst", "nml/vector/vec3/operator_brackets_value.rst", "nml/vector/vec3/operator_divide_equal_float.rst", "nml/vector/vec3/operator_minus_equal_vec3.rst", "nml/vector/vec3/operator_plus_equal_vec3.rst", "nml/vector/vec3/operator_times_equal_float.rst", "nml/vector/vec4.rst", "nml/vector/vec4/constructor.rst", "nml/vector/vec4/constructor_float.rst", "nml/vector/vec4/constructor_float_float_float_float.rst", "nml/vector/vec4/constructor_float_float_vec2.rst", "nml/vector/vec4/constructor_float_vec2_float.rst", "nml/vector/vec4/constructor_float_vec3.rst", "nml/vector/vec4/constructor_vec2_float_float.rst", "nml/vector/vec4/constructor_vec2_vec2.rst", "nml/vector/vec4/constructor_vec3_float.rst", "nml/vector/vec4/data.rst", "nml/vector/vec4/length.rst", "nml/vector/vec4/operator_brackets_ref.rst", "nml/vector/vec4/operator_brackets_value.rst", "nml/vector/vec4/operator_divide_equal_float.rst", "nml/vector/vec4/operator_minus_equal_vec4.rst", "nml/vector/vec4/operator_plus_equal_vec4.rst", "nml/vector/vec4/operator_times_equal_float.rst"], "titles": ["Getting started", "nml - Nutshell Mathematics Library", "nml", "Matrix", "mat2", "mat2: mat2()", "mat2: mat2(float _xxxyyxyy)", "mat2: mat2(float _xx, float _xy, float _yx, float _yy)", "mat2: mat2(float _xx, float _xy, nlm::vec2 _yxyy)", "mat2: mat2(nlm::vec2 _xxxy, float _yx, float _yy)", "mat2: mat2(nlm::vec2 _xxxy, nlm::vec2 _yxyy)", "mat2: float* data()", "mat2: float det() const", "mat2: nml::mat2&amp; operator[](size_t index)", "mat2: const nml::mat2&amp; operator[](size_t index) const", "mat2: nml::mat2&amp; operator/=(const float other)", "mat2: nml::mat2&amp; operator-=(const nml::mat2&amp; other)", "mat2: nml::mat2&amp; operator+=(const nml::mat2&amp; other)", "mat2: nml::mat2&amp; operator*=(const float other)", "mat2: nml::mat2&amp; operator*=(const nlm::mat2&amp; other)", "mat3", "mat3: mat3()", "mat3: mat3(float _xxxyxzyxyyyzzxzyzz)", "mat3: mat3(float _xx, float _xy, float _xz, float _yx, float _yy, float _yz, float _zx, float _zy, float _zz)", "mat3: mat3(float _xx, float _xy, float _xz, float _yx, float _yy, float _yz, nml::vec3 _zxzyzz)", "mat3: mat3(float _xx, float _xy, float _xz, nml::vec3 _yxyyyz, float _zx, float _zy, float _zz)", "mat3: mat3(float _xx, float _xy, float _xz, nml::vec3 _yxyyyz, nml::vec3 _zxzyzz)", "mat3: mat3(nml::vec3 _xxxyxz, float _yy, float _yz, float _zx, float _zy, float _zz)", "mat3: mat3(nml::vec3 _xxxyxz, float _yx, float _yy, float _yz, nml::vec3 _zxzyzz)", "mat3: mat3(nml::vec3 _xxxyxz, nml::vec3 _yxyyyz, float _zx, float _zy, float _zz)", "mat3: mat3(nml::vec3 _xxxyxz, nml::vec3 _yxyyyz, nml::vec3 _zxzyzz)", "mat3: float* data()", "mat3: float det() const", "mat3: nml::mat3&amp; operator[](size_t index)", "mat3: const nml::mat3&amp; operator[](size_t index) const", "mat3: nml::mat3&amp; operator/=(const float other)", "mat3: nml::mat3&amp; operator-=(const nml::mat3&amp; other)", "mat3: nml::mat3&amp; operator+=(const nml::mat3&amp; other)", "mat3: nml::mat3&amp; operator*=(const float other)", "mat3: nml::mat3&amp; operator*=(const nlm::mat3&amp; other)", "mat4", "mat4: mat4()", "mat4: mat4(float _xxxyxzxwyxyyyzywzxzyzzzwwxwywzww)", "mat4: mat4(float _xx, float _xy, float _xz, float _xw, float _yx, float _yy, float _yz, float _yw, float _zx, float _zy, float _zz, float _zw, float _wx, float _wy, float _wz, float _ww)", "mat4: mat4(float _xx, float _xy, float _xz, float _xw, float _yx, float _yy, float _yz, float _yw, float _zx, float _zy, float _zz, float _zw, nml::vec4 _wxwywzww)", "mat4: mat4(float _xx, float _xy, float _xz, float _xw, float _yx, float _yy, float _yz, float _yw, nml::vec4 _zxzyzzzw, float _wx, float _wy, float _wz, float _ww)", "mat4: mat4(float _xx, float _xy, float _xz, float _xw, float _yx, float _yy, float _yz, float _yw, nml::vec4 _zxzyzzzw, nml::vec4 _wxwywzww)", "mat4: mat4(float _xx, float _xy, float _xz, float _xw, nml::vec4 _yxyyyzyw, float _zx, float _zy, float _zz, float _zw, float _wx, float _wy, float _wz, float _ww)", "mat4: mat4(float _xx, float _xy, float _xz, float _xw, nml::vec4 _yxyyyzyw, float _zx, float _zy, float _zz, float _zw, nml::vec4 _wxwywzww)", "mat4: mat4(float _xx, float _xy, float _xz, float _xw, nml::vec4 _yxyyyzyw, nml::vec4 _zxzyzzzw, float _wx, float _wy, float _wz, float _ww)", "mat4: mat4(float _xx, float _xy, float _xz, float _xw, nml::vec4 _yxyyyzyw, nml::vec4 _zxzyzzzw, nml::vec4 _wxwywzww)", "mat4: mat4(nml::vec4 _xxxyxzxw, float _yx, float _yy, float _yz, float _yw, float _zx, float _zy, float _zz, float _zw, float _wx, float _wy, float _wz, float _ww)", "mat4: mat4(nml::vec4 _xxxyxzxw, float _yx, float _yy, float _yz, float _yw, float _zx, float _zy, float _zz, float _zw, nml::vec4 _wxwywzww)", "mat4: mat4(nml::vec4 _xxxyxzxw, float _yx, float _yy, float _yz, float _yw, nml::vec4 _zxzyzzzw, float _wx, float _wy, float _wz, float _ww)", "mat4: mat4(float _xx, float _xy, float _xz, float _xw, float _yx, float _yy, float _yz, float _yw, float _zx, float _zy, float _zz, float _zw, float _wx, float _wy, float _wz, float _ww)", "mat4: mat4(nml::vec4 _xxxyxzxw, nml::vec4 _yxyyyzyw, float _zx, float _zy, float _zz, float _zw, float _wx, float _wy, float _wz, float _ww)", "mat4: mat4(nml::vec4 _xxxyxzxw, nml::vec4 _yxyyyzyw, float _zx, float _zy, float _zz, float _zw, nml::vec4 _wxwywzww)", "mat4: mat4(nml::vec4 _xxxyxzxw, nml::vec4 _yxyyyzyw, nml::vec4 _zxzyzzzw, float _wx, float _wy, float _wz, float _ww)", "mat4: mat4(nml::vec4 _xxxyxzxw, nml::vec4 _yxyyyzyw, nml::vec4 _zxzyzzzw, nml::vec4 _wxwywzww)", "mat4: float* data()", "mat4: float det() const", "mat4: nml::mat4&amp; operator[](size_t index)", "mat4: const nml::mat4&amp; operator[](size_t index) const", "mat4: nml::mat4&amp; operator/=(const float other)", "mat4: nml::mat4&amp; operator-=(const nml::mat4&amp; other)", "mat4: nml::mat4&amp; operator+=(const nml::mat4&amp; other)", "mat4: nml::mat4&amp; operator*=(const float other)", "mat4: nml::mat4&amp; operator*=(const nlm::mat4&amp; other)", "nml::quat nml::conjugate(const nml::quat&amp; qua)", "nml::vec3 nml::cross(const nml::vec3&amp; a, const nml::vec3&amp; b)", "float nml::dot(const nml::vec2&amp; a, const nml::vec2&amp; b)", "float nml::dot(const nml::vec3&amp; a, const nml::vec3&amp; b)", "float nml::dot(const nml::vec4&amp; a, const nml::vec4&amp; b)", "nml::mat2 inverse(const nml::mat2&amp; mat)", "nml::mat3 inverse(const nml::mat3&amp; mat)", "nml::mat4 inverse(const nml::mat4&amp; mat)", "nml::mat4 lookAtLH(const nml::vec3&amp; from, const nml::vec3&amp; to, const nml::vec3&amp; up)", "nml::mat4 lookAtRH(const nml::vec3&amp; from, const nml::vec3&amp; to, const nml::vec3&amp; up)", "nml::quat nml::normalize(const nml::quat&amp; qua)", "nml::vec2 nml::normalize(const nml::vec2&amp; vec)", "nml::vec3 nml::normalize(const nml::vec3&amp; vec)", "nml::vec4 nml::normalize(const nml::vec4&amp; vec)", "nml::mat2 operator/(nml::mat2 lhs, const float rhs)", "nml::mat3 operator/(nml::mat3 lhs, const float rhs)", "nml::mat4 operator/(nml::mat4 lhs, const float rhs)", "nml::quat operator/(nml::quat lhs, const float rhs)", "nml::vec2 operator/(nml::vec2 lhs, const float rhs)", "nml::vec3 operator/(nml::vec3 lhs, const float rhs)", "nml::vec4 operator/(nml::vec4 lhs, const float rhs)", "bool operator==(const nml::mat2&amp; lhs, const nml::mat2&amp; rhs)", "bool operator==(const nml::mat3&amp; lhs, const nml::mat3&amp; rhs)", "bool operator==(const nml::mat4&amp; lhs, const nml::mat4&amp; rhs)", "bool operator==(const nml::quat&amp; lhs, const nml::quat&amp; rhs)", "bool operator==(const nml::vec2&amp; lhs, const nml::vec2&amp; rhs)", "bool operator==(const nml::vec3&amp; lhs, const nml::vec3&amp; rhs)", "bool operator==(const nml::vec4&amp; lhs, const nml::vec4&amp; rhs)", "bool operator!=(const nml::mat2&amp; lhs, const nml::mat2&amp; rhs)", "bool operator!=(const nml::mat3&amp; lhs, const nml::mat3&amp; rhs)", "bool operator!=(const nml::mat4&amp; lhs, const nml::mat4&amp; rhs)", "bool operator!=(const nml::quat&amp; lhs, const nml::quat&amp; rhs)", "bool operator!=(const nml::vec2&amp; lhs, const nml::vec2&amp; rhs)", "bool operator!=(const nml::vec3&amp; lhs, const nml::vec3&amp; rhs)", "bool operator!=(const nml::vec4&amp; lhs, const nml::vec4&amp; rhs)", "nml::mat2 operator-(nml::mat2 lhs, const nml::mat2&amp; rhs)", "nml::mat3 operator-(nml::mat3 lhs, const nml::mat3&amp; rhs)", "nml::mat4 operator-(nml::mat4 lhs, const nml::mat4&amp; rhs)", "nml::quat operator-(nml::quat lhs, const nml::quat&amp; rhs)", "nml::vec2 operator-(nml::vec2 lhs, const nml::vec2&amp; rhs)", "nml::vec3 operator-(nml::vec3 lhs, const nml::vec3&amp; rhs)", "nml::vec4 operator-(nml::vec4 lhs, const nml::vec4&amp; rhs)", "nml::mat2 operator+(nml::mat2 lhs, const nml::mat2&amp; rhs)", "nml::mat3 operator+(nml::mat3 lhs, const nml::mat3&amp; rhs)", "nml::mat4 operator+(nml::mat4 lhs, const nml::mat4&amp; rhs)", "nml::quat operator+(nml::quat lhs, const nml::quat&amp; rhs)", "nml::vec2 operator+(nml::vec2 lhs, const nml::vec2&amp; rhs)", "nml::vec3 operator+(nml::vec3 lhs, const nml::vec3&amp; rhs)", "nml::vec4 operator+(nml::vec4 lhs, const nml::vec4&amp; rhs)", "nml::mat2 operator*(float lhs, const nml::mat2&amp; rhs)", "nml::mat3 operator*(float lhs, const nml::mat3&amp; rhs)", "nml::mat4 operator*(float lhs, const nml::mat4&amp; rhs)", "nml::quat operator*(float lhs, const nml::quat&amp; rhs)", "nml::vec2 operator*(float lhs, const nml::vec2&amp; rhs)", "nml::vec3 operator*(float lhs, const nml::vec3&amp; rhs)", "nml::vec4 operator*(float lhs, const nml::vec4&amp; rhs)", "nml::mat2 operator*(nml::mat2 lhs, const float rhs)", "nml::mat2 operator*(nml::mat2 lhs, const nml::mat2&amp; rhs)", "nml::vec2 operator*(nml::mat2 lhs, const nml::vec2&amp; rhs)", "nml::mat3 operator*(nml::mat3 lhs, const float rhs)", "nml::mat3 operator*(nml::mat3 lhs, const nml::mat3&amp; rhs)", "nml::vec3 operator*(nml::mat3 lhs, const nml::vec3&amp; rhs)", "nml::mat4 operator*(nml::mat4 lhs, const float rhs)", "nml::mat4 operator*(nml::mat4 lhs, const nml::mat4&amp; rhs)", "nml::vec4 operator*(nml::mat4 lhs, const nml::vec4&amp; rhs)", "nml::quat operator*(nml::quat lhs, const float rhs)", "nml::quat operator*(nml::quat lhs, const nml::quat&amp; rhs)", "nml::vec2 operator*(nml::vec2 lhs, const float rhs)", "nml::vec3 operator*(nml::vec3 lhs, const float rhs)", "nml::vec4 operator*(nml::vec4 lhs, const float rhs)", "nml::vec2 nml::reflect(const nml::vec2&amp; i, const nml::vec2&amp; n)", "nml::vec3 nml::reflect(const nml::vec3&amp; i, const nml::vec3&amp; n)", "nml::vec4 nml::reflect(const nml::vec4&amp; i, const nml::vec4&amp; n)", "nml::vec2 nml::refract(const nml::vec2&amp; i, const nml::vec2&amp; n, float ior)", "nml::vec3 nml::refract(const nml::vec3&amp; i, const nml::vec3&amp; n, float ior)", "nml::vec4 nml::refract(const nml::vec4&amp; i, const nml::vec4&amp; n, float ior)", "nml::mat3 rotate(const float angle)", "nml::mat4 rotate(const float angle, const nml::vec3&amp; axis)", "nml::mat3 scale(const nml::vec2&amp; scaling)", "nml::mat4 scale(const nml::vec3&amp; scaling)", "nml::mat4 nml::to_mat4(const nml::quat&amp; qua)", "nml::quat nml::to_quat(const nml::vec3&amp; vec)", "std::string nml::to_string(const nml::mat2&amp; vec)", "std::string nml::to_string(const nml::mat3&amp; vec)", "std::string nml::to_string(const nml::mat4&amp; vec)", "std::string nml::to_string(const nml::quat&amp; vec)", "std::string nml::to_string(const nml::vec2&amp; vec)", "std::string nml::to_string(const nml::vec3&amp; vec)", "std::string nml::to_string(const nml::vec4&amp; vec)", "nml::vec3 nml::to_vec3(const nml::quat&amp; qua)", "nml::mat3 translate(const nml::vec2&amp; translation)", "nml::mat4 translate(const nml::vec3&amp; translation)", "nml::mat2 transpose(const nml::mat2&amp; mat)", "nml::mat3 transpose(const nml::mat3&amp; mat)", "nml::mat4 transpose(const nml::mat4&amp; mat)", "Quaternion", "quat", "quat: quat()", "quat: quat(float _a, float _b, float _c, float _d)", "quat: float* data()", "quat: float length()", "quat: float&amp; operator[](size_t index)", "quat: const float operator[](size_t index) const", "quat: nml::quat&amp; operator/=(const float other)", "quat: nml::quat&amp; operator-=(const nml::quat&amp; other)", "quat: nml::quat&amp; operator+=(const nml::quat&amp; other)", "quat: nml::quat&amp; operator*=(const float other)", "quat: nml::quat&amp; operator*=(const nml::quat&amp; other)", "Vector", "vec2", "vec2: vec2()", "vec2: vec2(float _xy)", "vec2: vec2(float _x, float _y)", "vec2: float* data()", "vec2: float length()", "vec2: float&amp; operator[](size_t index)", "vec2: const float operator[](size_t index) const", "vec2: nml::vec2&amp; operator/=(const float other)", "vec2: nml::vec2&amp; operator-=(const nml::vec2&amp; other)", "vec2: nml::vec2&amp; operator+=(const nml::vec2&amp; other)", "vec2: nml::vec2&amp; operator*=(const float other)", "vec3", "vec3: vec3()", "vec3: vec3(float _xyz)", "vec3: vec3(float _x, float _y, float _z)", "vec3: vec3(float _x, nml::vec2 _yz)", "vec3: vec3(nml::vec2 _xy, float _z)", "vec3: float* data()", "vec3: float length()", "vec3: float&amp; operator[](size_t index)", "vec3: const float operator[](size_t index) const", "vec3: nml::vec3&amp; operator/=(const float other)", "vec3: nml::vec3&amp; operator-=(const nml::vec3&amp; other)", "vec3: nml::vec3&amp; operator+=(const nml::vec3&amp; other)", "vec3: nml::vec3&amp; operator*=(const float other)", "vec4", "vec4: vec4()", "vec4: vec4(float _xyzw)", "vec4: vec4(float _x, float _y, float _z, float _w)", "vec4: vec4(float _x, float _y, nlm::vec2 _zw)", "vec4: vec4(float _x, nlm::vec2 _yz, float _w)", "vec4: vec4(float _x, nlm::vec3 _yzw)", "vec4: vec4(nlm::vec2 _xy, float _z, float _w)", "vec4: vec4(nlm::vec2 _xy, nlm::vec2 _zw)", "vec4: vec4(nlm::vec3 _xyz, float _w)", "vec4: float* data()", "vec4: float length()", "vec4: float&amp; operator[](size_t index)", "vec4: const float operator[](size_t index) const", "vec4: nml::vec4&amp; operator/=(const float other)", "vec4: nml::vec4&amp; operator-=(const nml::vec4&amp; other)", "vec4: nml::vec4&amp; operator+=(const nml::vec4&amp; other)", "vec4: nml::vec4&amp; operator*=(const float other)"], "terms": {"i": [0, 1, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 32, 33, 34, 35, 36, 37, 38, 39, 40, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 144, 145, 146, 147, 148, 149, 153, 157, 158, 159, 160, 161, 162, 164, 168, 169, 170, 171, 172, 173, 174, 175, 177, 182, 183, 184, 185, 186, 187, 188, 189, 196, 197, 198, 199, 200, 201, 202, 203, 214, 215, 216, 217, 218, 219, 220], "avail": [0, 1], "github": [0, 1], "git": 0, "clone": 0, "http": 0, "com": 0, "team": 0, "nutshel": 0, "can": [0, 176], "built": 0, "static": 0, "librari": 0, "name": [0, 4, 20, 40, 164, 177, 189, 203], "replac": 0, "path_to_nml": 0, "path": 0, "sourc": 0, "code": 0, "directori": 0, "add_subdirectori": 0, "target_include_directori": 0, "project_nam": 0, "public": 0, "target_link_librari": 0, "In": 0, "sampl": 0, "It": 0, "possibl": 0, "includ": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "entir": 0, "one": 0, "h": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "Or": 0, "onli": 0, "need": 0, "header": [0, 4, 20, 40, 164, 177, 189, 203], "vec2": [0, 1, 2, 4, 13, 14, 20, 176, 189, 203], "vec3": [0, 1, 2, 20, 33, 34, 40, 164, 176, 203], "mat4": [0, 1, 2, 3], "c": [1, 14, 34, 62, 67, 69, 70, 71, 72, 74, 75, 78, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 125, 126, 128, 129, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 148, 153, 157, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 184, 198, 216], "comput": 1, "graphic": 1, "get": 1, "start": 1, "add": [1, 4, 17, 20, 37, 40, 65, 164, 173, 177, 187, 189, 201, 203, 219], "cmake": 1, "project": 1, "us": [1, 176], "vector": [1, 2, 20, 40, 138, 139, 140, 141, 142, 143, 145, 158, 159, 177, 178, 179, 180, 181, 182, 189, 190, 191, 192, 193, 194, 195, 196, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], "vec4": [1, 2, 40, 54, 61, 62, 176], "matrix": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 144, 145, 146, 147, 148, 158, 159], "mat2": [1, 2, 3], "mat3": [1, 2, 3], "quaternion": [1, 2, 40, 68, 148, 149, 157, 164, 165, 166, 167, 168, 189], "quat": [1, 2, 40, 163, 189], "index": [1, 4, 20, 40, 164, 177, 189, 203], "modul": 1, "search": 1, "page": 1, "class": [2, 3, 163, 176], "variabl": [2, 3, 163, 176], "function": [2, 3, 73, 74, 75, 138, 139, 140, 141, 142, 143, 145, 163, 176], "constructor": [2, 3, 163, 176], "oper": [2, 3, 163, 176], "namespac": [2, 3, 163, 176], "file": [4, 20, 40, 164, 177, 189, 203], "column": [4, 20, 40, 160, 161, 162], "major": [4, 20, 40], "2": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "row": [4, 20, 40, 160, 161, 162], "begin": [4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 162, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220], "bmatrix": [4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 162, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220], "x": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 167, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "y": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "end": [4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 157, 158, 159, 160, 161, 162, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220], "type": [4, 20, 40, 164, 177, 189, 203], "descript": [4, 20, 40, 164, 177, 189, 203], "nml": [4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 22, 23, 31, 32, 40, 41, 42, 43, 54, 59, 60, 164, 165, 166, 167, 168, 169, 170, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "The": [4, 12, 15, 16, 17, 18, 19, 20, 32, 35, 36, 37, 38, 39, 40, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 162, 164, 168, 171, 172, 173, 174, 175, 177, 182, 185, 186, 187, 188, 189, 196, 199, 200, 201, 202, 203, 214, 217, 218, 219, 220], "first": [4, 20, 40, 164, 177, 189, 203], "second": [4, 20, 40, 164, 177, 189, 203], "construct": [4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 164, 165, 166, 177, 178, 179, 180, 189, 190, 191, 192, 193, 194, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "1": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "0": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "ident": [4, 5, 20, 21, 40, 41, 89, 90, 91, 92, 93, 94, 95, 164, 165, 177, 189, 203], "float": [4, 14, 20, 34, 40, 62, 164, 177, 189, 203], "_xxxyyxyi": 4, "_xx": [4, 20, 40], "_xy": [4, 20, 40, 177, 189, 203], "_yx": [4, 20, 27, 40], "_yi": [4, 20, 40], "nlm": [4, 20, 40, 203], "_yxyi": 4, "_xxxy": 4, "const": [4, 20, 40, 164, 177, 189, 203], "other": [4, 20, 40, 164, 177, 189, 203], "current": [4, 15, 16, 17, 18, 19, 20, 35, 36, 37, 38, 39, 40, 63, 64, 65, 66, 67, 164, 171, 172, 173, 174, 175, 177, 185, 186, 187, 188, 189, 199, 200, 201, 202, 203, 217, 218, 219, 220], "substract": [4, 16, 20, 36, 40, 64, 164, 172, 177, 186, 189, 200, 203, 218], "from": [4, 16, 20, 36, 40, 64, 148, 149, 157, 164, 172, 177, 186, 189, 200, 203, 218], "multipli": [4, 18, 19, 20, 38, 39, 40, 66, 67, 164, 174, 175, 177, 188, 189, 202, 203, 220], "scalar": [4, 15, 18, 20, 35, 38, 40, 63, 66, 82, 83, 84, 85, 86, 87, 88, 117, 118, 119, 120, 121, 122, 123, 124, 127, 130, 133, 134, 135, 136, 137, 164, 171, 174, 175, 176, 177, 185, 188, 189, 199, 202, 203, 217, 220], "divid": [4, 15, 20, 35, 40, 63, 164, 171, 177, 185, 189, 199, 203, 217], "size_t": [4, 20, 40, 164, 177, 189, 203], "return": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "refer": [4, 13, 14, 20, 33, 34, 40, 61, 62, 164, 169, 177, 183, 189, 197, 203, 215], "els": [4, 13, 14, 20, 33, 34, 40, 61, 62, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 164, 169, 170, 177, 183, 184, 189, 197, 198, 203, 215, 216], "throw": [4, 13, 14, 20, 33, 34, 40, 61, 62, 164, 169, 170, 177, 183, 184, 189, 197, 198, 203, 215, 216], "an": [4, 13, 14, 20, 33, 34, 40, 61, 62, 164, 169, 170, 177, 183, 184, 189, 197, 198, 203, 215, 216], "except": [4, 13, 14, 20, 33, 34, 40, 61, 62, 164, 169, 170, 177, 183, 184, 189, 197, 198, 203, 215, 216], "det": [4, 20, 40, 73, 74, 75], "determin": [4, 12, 20, 32, 40, 60, 73, 74, 75], "data": [4, 20, 40, 164, 177, 189, 203], "pointer": [4, 11, 20, 31, 40, 59, 164, 167, 177, 181, 189, 195, 203, 213], "": [4, 11, 20, 31, 40, 59, 164, 167, 177, 181, 189, 195, 203, 213], "element": [4, 11, 20, 31, 40, 59, 164, 167, 177, 181, 189, 195, 203, 213], "lh": [4, 20, 40, 164, 177, 189, 203], "rh": [4, 20, 40, 164, 177, 189, 203], "sum": [4, 17, 20, 37, 40, 65, 110, 111, 112, 113, 114, 115, 116, 164, 173, 177, 187, 189, 201, 203, 219], "between": [4, 15, 16, 17, 18, 19, 20, 35, 36, 37, 38, 39, 40, 63, 64, 65, 66, 67, 69, 70, 71, 72, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 164, 171, 172, 173, 174, 175, 177, 185, 186, 187, 188, 189, 199, 200, 201, 202, 203, 217, 218, 219, 220], "two": [4, 11, 16, 17, 19, 20, 31, 36, 37, 39, 40, 59, 64, 65, 67, 69, 70, 71, 72, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 125, 128, 131, 164, 167, 172, 173, 177, 186, 187, 189, 195, 200, 201, 203, 213, 218, 219], "differ": [4, 16, 20, 36, 40, 64, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 164, 172, 177, 186, 189, 200, 203, 218], "product": [4, 18, 19, 20, 38, 39, 40, 66, 67, 69, 70, 71, 72, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 164, 174, 175, 177, 188, 189, 202, 203, 220], "quotient": [4, 15, 20, 35, 40, 63, 82, 83, 84, 85, 86, 87, 88, 164, 171, 177, 185, 189, 199, 203, 217], "bool": [4, 20, 40, 164, 177, 189, 203], "true": [4, 20, 40, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 164, 177, 189, 203], "ar": [4, 20, 40, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 160, 161, 162, 164, 176, 177, 189, 203], "fals": [4, 20, 40, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 164, 177, 189, 203], "transpos": [4, 20, 40], "mat": [4, 20, 40], "where": [4, 20, 40, 160, 161, 162], "invers": [4, 19, 20, 39, 40, 67, 125, 128, 131], "std": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "string": [4, 20, 40, 164, 177, 189, 203], "to_str": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 220], "under": [4, 20, 40, 150, 151, 152, 153, 154, 155, 156, 164, 177, 189, 203], "format": [4, 20, 40, 150, 151, 152, 153, 154, 155, 156, 164, 177, 189, 203], "iostream": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "int": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "main": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "m": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 75, 76, 77, 131, 144, 145, 146, 147, 148, 150, 151, 152, 158, 159], "cout": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "endl": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "result": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "000000": [5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 82, 83, 84, 86, 87, 88, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 169, 172, 173, 174, 178, 179, 180, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 220], "0f": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "3": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 144, 145, 150, 151, 152, 155, 156, 159, 160, 161, 162, 164, 167, 169, 170, 173, 183, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "4": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 73, 74, 75, 76, 77, 81, 82, 83, 84, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 137, 139, 140, 142, 143, 150, 151, 152, 156, 160, 161, 162, 164, 169, 170, 186, 187, 188, 197, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "access": [11, 31, 59, 167, 181, 195, 213], "char": [11, 31, 59, 167, 181, 195, 213], "sizeof": [11, 31, 59, 167, 181, 195, 213], "take": [11, 31, 59, 167, 181, 195, 213], "address": [11, 31, 59, 167, 181, 195, 213], "size": [11, 31, 59, 167, 181, 195, 213], "three": [11, 31, 59, 167, 213], "calcul": [12, 15, 16, 17, 18, 19, 32, 35, 36, 37, 38, 39, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 162, 168, 171, 172, 173, 174, 175, 182, 185, 186, 187, 188, 196, 199, 200, 201, 202, 214, 217, 218, 219, 220], "thi": [12, 15, 16, 17, 18, 19, 32, 35, 36, 37, 38, 39, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 162, 168, 171, 172, 173, 174, 175, 182, 185, 186, 187, 188, 196, 199, 200, 201, 202, 214, 217, 218, 219, 220], "wai": [12, 15, 16, 17, 18, 19, 32, 35, 36, 37, 38, 39, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 162, 168, 171, 172, 173, 174, 175, 182, 185, 186, 187, 188, 196, 199, 200, 201, 202, 214, 217, 218, 219, 220], "5": [13, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 74, 75, 76, 77, 81, 83, 84, 90, 91, 96, 97, 98, 102, 103, 104, 105, 107, 108, 109, 115, 116, 118, 119, 127, 128, 129, 130, 132, 151, 152, 161, 162, 167, 169, 170, 200, 201, 214, 215, 218, 219], "6": [13, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 74, 75, 83, 84, 90, 91, 97, 98, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 130, 135, 136, 137, 151, 152, 161, 162, 186, 187, 200, 201, 202, 218, 219, 220], "7": [13, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 74, 75, 83, 84, 90, 91, 97, 98, 104, 105, 108, 109, 115, 116, 118, 119, 127, 128, 129, 130, 151, 152, 161, 162], "error": [13, 14, 33, 34, 61, 62, 169, 170, 183, 184, 197, 198, 215, 216], "termin": [13, 14, 33, 34, 61, 62, 169, 170, 183, 184, 197, 198, 215, 216], "call": [13, 14, 33, 34, 61, 62, 169, 170, 183, 184, 197, 198, 215, 216], "after": [13, 14, 33, 34, 61, 62, 169, 170, 183, 184, 197, 198, 215, 216], "instanc": [13, 14, 33, 34, 61, 62, 169, 170, 183, 184, 197, 198, 215, 216], "out_of_rang": [13, 14, 33, 34, 61, 62, 169, 170, 183, 184, 197, 198, 215, 216], "what": [13, 14, 33, 34, 61, 62, 169, 170, 183, 184, 197, 198, 215, 216], "out": [13, 14, 33, 34, 61, 62, 169, 170, 183, 184, 197, 198, 215, 216], "rang": [13, 14, 33, 34, 61, 62, 169, 170, 183, 184, 197, 198, 215, 216], "abort": [13, 14, 33, 34, 61, 62, 169, 170, 183, 184, 197, 198, 215, 216], "b": [14, 16, 17, 19, 34, 36, 37, 39, 62, 64, 65, 67, 68, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145, 148, 153, 157, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 182, 184, 186, 187, 189, 196, 198, 200, 201, 203, 214, 216, 218, 219], "d": [14, 34, 62, 67, 74, 75, 78, 85, 92, 99, 106, 113, 120, 131, 133, 134, 145, 148, 153, 157, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 198, 216], "frac": [15, 35, 63, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 149, 171, 185, 199, 217], "500000": [15, 35, 63, 73, 75, 82, 83, 84, 85, 86, 87, 88, 104, 105, 108, 109, 142, 143, 149, 171, 185, 199, 217], "8": [16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 83, 84, 90, 91, 97, 98, 104, 105, 109, 110, 111, 112, 118, 119, 127, 128, 130, 151, 152, 161, 162, 200, 218, 219, 220], "10": [16, 17, 32, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 84, 91, 98, 105, 110, 111, 112, 119, 128, 130, 152, 162, 218], "z": [20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 87, 88, 90, 91, 94, 95, 97, 98, 101, 102, 104, 105, 108, 109, 111, 112, 115, 116, 118, 119, 122, 123, 127, 128, 129, 130, 131, 132, 136, 137, 139, 140, 142, 143, 145, 147, 149, 151, 152, 155, 156, 159, 161, 162, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220], "third": [20, 40, 164, 189, 203], "_xxxyxzyxyyyzzxzyzz": 20, "_xz": [20, 40], "_yz": [20, 40, 189, 203], "_zx": [20, 40], "_zy": [20, 40], "_zz": [20, 40], "_zxzyzz": 20, "_yxyyyz": 20, "_xxxyxz": 20, "translat": [20, 40], "2d": [20, 144, 146, 158], "accord": [20, 40, 144, 145, 146, 147, 158, 159], "rotat": [20, 40, 148], "angl": [20, 40, 149, 157, 164, 176, 189], "radian": [20, 40, 144, 145, 157, 164, 189], "scale": [20, 40], "factor": [20, 40, 146, 147], "9": [23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 83, 84, 90, 91, 97, 98, 104, 105, 117, 118, 119, 122, 123, 124, 127, 130, 136, 137, 151, 152, 161, 162, 201, 219], "four": [31, 59], "five": [31, 59], "six": [31, 59], "seven": [31, 59], "eight": [31, 59], "small": [32, 67, 75, 89, 90, 91, 96, 97, 98, 131, 157], "12": [33, 36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 84, 91, 97, 98, 105, 111, 112, 115, 116, 117, 118, 119, 123, 124, 127, 130, 137, 152, 162], "25": [33, 61, 132, 167, 170], "14": [36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 84, 91, 98, 105, 111, 112, 119, 130, 152, 162, 219], "16": [36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 84, 91, 98, 105, 110, 111, 112, 119, 130, 152, 162], "18": [36, 37, 38, 64, 65, 66, 111, 112, 118, 119, 127, 130], "20": [36, 37, 61, 64, 65, 66, 112], "11": [36, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 84, 91, 98, 105, 119, 130, 152, 162], "tini": [39, 42, 128], "w": [40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 75, 81, 84, 88, 91, 95, 98, 102, 105, 109, 112, 116, 119, 123, 130, 131, 132, 137, 140, 143, 152, 156, 162, 203, 213, 214, 215, 216, 217, 218, 219, 220], "fourth": [40, 164, 203], "_xxxyxzxwyxyyyzywzxzyzzzwwxwywzww": 40, "_xw": 40, "_yw": 40, "_zw": [40, 203], "_wx": 40, "_wy": 40, "_wz": 40, "_ww": 40, "_wxwywzww": [40, 54], "_zxzyzzzw": [40, 54], "_yxyyyzyw": 40, "_xxxyxzxw": [40, 54], "3d": [40, 145, 147, 148, 159], "axi": [40, 176], "lookatlh": 40, "up": 40, "left": [40, 76, 78, 79, 80, 81], "hand": [40, 76, 77], "look": [40, 76, 77], "lookatrh": 40, "right": [40, 76, 77, 78, 79, 80, 81], "to_mat4": 40, "qua": [40, 164, 189], "13": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 84, 91, 98, 105, 119, 130, 152, 162], "15": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 84, 91, 98, 105, 118, 119, 127, 130, 152, 162], "nine": 59, "ten": 59, "eleven": 59, "twelv": 59, "thirteen": 59, "fourteen": 59, "fifteen": 59, "scriptsiz": 60, "32": [60, 64, 65, 66, 111, 112], "64": [60, 111, 112], "480": 60, "250": 61, "e": [62, 67, 74, 75, 131, 145, 148, 170, 216], "22": [64, 65, 66, 112], "24": [64, 65, 66, 112, 118, 119, 127, 130], "26": [64, 65, 66, 111, 112], "28": [64, 65, 66, 112, 132], "30": [64, 65, 66, 112, 119, 130], "34": [64, 65], "17": [64, 65, 129, 132], "f": [67, 74, 75, 131, 145, 148], "j": [67, 75, 78, 85, 106, 113, 120, 131, 133, 134, 149, 153, 164, 171, 172, 173, 174, 175], "n": [67, 75, 131, 177, 189, 203], "g": [67, 74, 75, 131, 145, 148], "k": [67, 75, 78, 85, 106, 113, 120, 131, 133, 134, 141, 142, 143, 149, 153, 164, 171, 172, 173, 174, 175], "o": [67, 75, 131], "l": [67, 75, 131], "p": [67, 75, 131], "conj": 68, "bi": [68, 78, 85, 92, 99, 106, 113, 120, 133, 134, 164, 171, 172, 173, 174, 175], "cj": [68, 78, 85, 92, 99, 106, 113, 120, 133, 134, 164, 171, 172, 173, 174, 175], "dk": [68, 78, 85, 92, 99, 106, 113, 120, 133, 134, 164, 171, 172, 173, 174, 175], "25f": [68, 76, 77, 78, 85, 92, 99, 105, 106, 113, 120, 126, 129, 132, 133, 134, 153, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "5f": [68, 76, 77, 78, 85, 92, 99, 104, 105, 106, 108, 109, 113, 120, 126, 129, 132, 133, 134, 141, 142, 143, 153, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "75f": [68, 78, 85, 92, 99, 106, 113, 120, 133, 134, 153, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "250000i": [68, 153, 166], "500000j": [68, 106, 113, 120, 133, 149, 153, 166], "750000k": [68, 153, 166], "dot": [69, 177, 189, 203], "time": [69, 76, 77], "cdot": [70, 71, 72, 76, 77, 138, 139, 140, 141, 142, 143], "doe": [73, 74, 75, 138, 139, 140, 141, 142, 143, 145], "check": [73, 74, 75], "invert": [73, 74, 75], "null": [73, 74, 75], "inva": [73, 74, 75], "invb": [73, 74, 75], "undefin": [73, 74, 75], "behaviour": [73, 74, 75], "inf": [73, 74], "t": [74, 75, 160, 161, 162], "adj": [74, 75], "666667": 74, "333333": 74, "nan": 75, "realup": [76, 77], "forward": [76, 77], "norm": [76, 77, 78, 79, 80, 81], "707107": [76, 77], "313677": [76, 77], "633724": [76, 77], "896221": [76, 77], "443607": [76, 77], "949747": [76, 77], "061309": [76, 77], "598269": [76, 77], "same": [78, 79, 80, 81, 164, 177, 189, 203], "direct": [78, 79, 80, 81, 138, 139, 140, 141, 142, 143, 164, 177, 189, 203], "length": [78, 79, 80, 81, 164, 177, 189, 203], "36931": [78, 168], "730297": [78, 81], "182574i": 78, "365148j": 78, "547723k": 78, "23607": [79, 182], "447214": 79, "894427": 79, "74166": [80, 196], "267261": 80, "534522": 80, "801784": 80, "47723": [81, 214], "182574": 81, "365148": 81, "547723": 81, "125000i": [85, 171], "250000j": [85, 171], "375000k": [85, 171], "equal": [89, 90, 91, 92, 93, 94, 95], "inequ": [96, 97, 98, 99, 100, 101, 102], "neq": [96, 97, 98, 99, 100, 101, 102], "99f": 105, "2f": 105, "750000": [105, 126, 132], "010000": 105, "800000": 105, "000000i": [106, 165, 169], "250000k": [106, 113, 120, 133], "128": [111, 112], "256": [111, 112], "44": [111, 112], "78": [111, 112], "144": [111, 112], "274": [111, 112], "512": 112, "1024": 112, "2048": 112, "4096": 112, "8192": 112, "16384": 112, "32768": 112, "532": 112, "1046": 112, "2072": 112, "4122": 112, "8220": 112, "16414": 112, "32800": 112, "500000i": [113, 149, 174], "19": 116, "21": [118, 119, 127, 130], "27": [118, 119, 127, 130], "33": [119, 130], "36": [119, 130, 132], "39": [119, 130], "42": [119, 130], "45": [119, 130], "48": [119, 130], "750000i": [120, 133], "875000": 126, "250000": 129, "187500": [129, 134, 175], "812500": 132, "562500": 132, "82f": [134, 172, 173, 175], "24f": [134, 172, 173, 175], "65f": [134, 172, 173, 175], "465000i": [134, 175], "692500j": [134, 175], "800000k": [134, 175], "incid": [138, 139, 140, 141, 142, 143, 177, 189, 203], "normal": [138, 139, 140, 141, 142, 143, 145, 148, 157, 164, 168, 177, 182, 189, 196, 203, 214], "should": [138, 139, 140, 141, 142, 143, 145, 176, 177, 189, 203], "ratio": [141, 142, 143, 177, 189, 203], "indic": [141, 142, 143, 177, 189, 203], "case": [141, 142, 143], "text": [141, 142, 143], "sqrt": [141, 142, 143, 168, 182, 196, 214], "otherwis": [141, 142, 143], "322876": [141, 142, 143], "co": [144, 145, 149], "sin": [144, 145, 149], "pi": [144, 145], "14159265358979323846f": [144, 145], "rotationangl": [144, 145], "90": [144, 145], "convers": [148, 149, 157], "q": [148, 149, 153, 157, 165, 166, 167, 169, 170, 171, 174], "euler": [149, 157, 164, 176, 189], "v": [149, 154, 155, 156, 157, 178, 179, 180, 181, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220], "570796f": 149, "000000f": 149, "500000k": [149, 174], "repres": [157, 176, 189], "atan2": 157, "asin": 157, "570796": 157, "translationvector": [158, 159], "_a": 164, "_b": 164, "_c": 164, "_d": 164, "valu": [164, 170, 177, 184, 189, 198, 203, 216], "conjug": 164, "to_quat": 164, "vec": [164, 177, 189, 203], "0i": 165, "0j": 165, "0k": 165, "000000j": [165, 169, 174], "000000k": [165, 169], "_bi": 166, "_cj": 166, "_dk": 166, "75": [167, 170], "570000i": 172, "260000j": 172, "100000k": 172, "070000i": 173, "740000j": 173, "400000k": 173, "object": 176, "multipl": 176, "point": 176, "etc": 176, "accordingli": 176, "_x": [177, 189, 203], "_y": [177, 189, 203], "reflect": [177, 189, 203], "refract": [177, 189, 203], "ior": [177, 189, 203], "_xyz": [189, 203], "_z": [189, 203], "cross": 189, "to_vec3": 189, "_xyzw": 203, "_w": 203, "_yzw": 203, "ec4": 218}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"get": 0, "start": 0, "nml": [0, 1, 2, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 171, 172, 173, 174, 175, 185, 186, 187, 188, 193, 194, 199, 200, 201, 202, 217, 218, 219, 220], "add": 0, "cmake": 0, "project": 0, "us": 0, "nutshel": 1, "mathemat": 1, "librari": 1, "tabl": 1, "content": 1, "indic": 1, "matrix": 3, "mat2": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 73, 82, 89, 96, 103, 110, 117, 124, 125, 126, 150, 160], "class": [4, 20, 40, 164, 177, 189, 203], "variabl": [4, 20, 40, 164, 177, 189, 203], "function": [4, 20, 40, 164, 177, 189, 203], "constructor": [4, 20, 40, 164, 177, 189, 203], "oper": [4, 13, 14, 15, 16, 17, 18, 19, 20, 33, 34, 35, 36, 37, 38, 39, 40, 61, 62, 63, 64, 65, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 164, 169, 170, 171, 172, 173, 174, 175, 177, 183, 184, 185, 186, 187, 188, 189, 197, 198, 199, 200, 201, 202, 203, 215, 216, 217, 218, 219, 220], "namespac": [4, 20, 40, 164, 177, 189, 203], "exampl": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "float": [6, 7, 8, 9, 11, 12, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 63, 66, 70, 71, 72, 82, 83, 84, 85, 86, 87, 88, 117, 118, 119, 120, 121, 122, 123, 124, 127, 130, 133, 135, 136, 137, 141, 142, 143, 144, 145, 166, 167, 168, 169, 170, 171, 174, 179, 180, 181, 182, 183, 184, 185, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 220], "_xxxyyxyi": 6, "_xx": [7, 8, 23, 24, 25, 26, 43, 44, 45, 46, 47, 48, 49, 50, 54], "_xy": [7, 8, 23, 24, 25, 26, 43, 44, 45, 46, 47, 48, 49, 50, 54, 179, 194, 210, 211], "_yx": [7, 9, 23, 24, 28, 43, 44, 45, 46, 51, 52, 53, 54], "_yi": [7, 9, 23, 24, 27, 28, 43, 44, 45, 46, 51, 52, 53, 54], "nlm": [8, 9, 10, 19, 39, 67, 207, 208, 209, 210, 211, 212], "vec2": [8, 9, 10, 70, 79, 86, 93, 100, 107, 114, 121, 126, 135, 138, 141, 146, 154, 158, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 207, 208, 210, 211], "_yxyi": [8, 10], "_xxxy": [9, 10], "data": [11, 31, 59, 167, 181, 195, 213], "det": [12, 32, 60], "const": [12, 14, 15, 16, 17, 18, 19, 32, 34, 35, 36, 37, 38, 39, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 175, 184, 185, 186, 187, 188, 198, 199, 200, 201, 202, 216, 217, 218, 219, 220], "size_t": [13, 14, 33, 34, 61, 62, 169, 170, 183, 184, 197, 198, 215, 216], "index": [13, 14, 33, 34, 61, 62, 169, 170, 183, 184, 197, 198, 215, 216], "other": [15, 16, 17, 18, 19, 35, 36, 37, 38, 39, 63, 64, 65, 66, 67, 171, 172, 173, 174, 175, 185, 186, 187, 188, 199, 200, 201, 202, 217, 218, 219, 220], "mat3": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 74, 83, 90, 97, 104, 111, 118, 127, 128, 129, 144, 146, 151, 158, 161], "_xxxyxzyxyyyzzxzyzz": 22, "_xz": [23, 24, 25, 26, 43, 44, 45, 46, 47, 48, 49, 50, 54], "_yz": [23, 24, 27, 28, 43, 44, 45, 46, 51, 52, 53, 54, 193, 208], "_zx": [23, 25, 27, 29, 43, 44, 47, 48, 51, 52, 54, 55, 56], "_zy": [23, 25, 27, 29, 43, 44, 47, 48, 51, 52, 54, 55, 56], "_zz": [23, 25, 27, 29, 43, 44, 47, 48, 51, 52, 54, 55, 56], "vec3": [24, 25, 26, 27, 28, 29, 30, 69, 71, 76, 77, 80, 87, 94, 101, 108, 115, 122, 129, 136, 139, 142, 145, 147, 149, 155, 157, 159, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 209, 212], "_zxzyzz": [24, 26, 28, 30], "_yxyyyz": [25, 26, 29, 30], "_xxxyxz": [27, 28, 29, 30], "mat4": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 75, 76, 77, 84, 91, 98, 105, 112, 119, 130, 131, 132, 145, 147, 148, 152, 159, 162], "_xxxyxzxwyxyyyzywzxzyzzzwwxwywzww": 42, "_xw": [43, 44, 45, 46, 47, 48, 49, 50, 54], "_yw": [43, 44, 45, 46, 51, 52, 53, 54], "_zw": [43, 44, 47, 48, 51, 52, 54, 55, 56, 207, 211], "_wx": [43, 45, 47, 49, 51, 53, 54, 55, 57], "_wy": [43, 45, 47, 49, 51, 53, 54, 55, 57], "_wz": [43, 45, 47, 49, 51, 53, 54, 55, 57], "_ww": [43, 45, 47, 49, 51, 53, 54, 55, 57], "vec4": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 72, 81, 88, 95, 102, 109, 116, 123, 132, 137, 140, 143, 156, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "_wxwywzww": [44, 46, 48, 50, 52, 56, 58], "_zxzyzzzw": [45, 46, 49, 50, 53, 57, 58], "_yxyyyzyw": [47, 48, 49, 50, 55, 56, 57, 58], "_xxxyxzxw": [51, 52, 53, 55, 56, 57, 58], "quat": [68, 78, 85, 92, 99, 106, 113, 120, 133, 134, 148, 149, 153, 157, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "conjug": 68, "qua": [68, 78, 148, 157], "cross": 69, "b": [69, 70, 71, 72], "dot": [70, 71, 72], "invers": [73, 74, 75], "mat": [73, 74, 75, 160, 161, 162], "lookatlh": 76, "from": [76, 77], "up": [76, 77], "lookatrh": 77, "normal": [78, 79, 80, 81], "vec": [79, 80, 81, 149, 150, 151, 152, 153, 154, 155, 156], "lh": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "rh": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "bool": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "reflect": [138, 139, 140], "i": [138, 139, 140, 141, 142, 143], "n": [138, 139, 140, 141, 142, 143], "refract": [141, 142, 143], "ior": [141, 142, 143], "rotat": [144, 145], "angl": [144, 145], "axi": 145, "scale": [146, 147], "to_mat4": 148, "to_quat": 149, "std": [150, 151, 152, 153, 154, 155, 156], "string": [150, 151, 152, 153, 154, 155, 156], "to_str": [150, 151, 152, 153, 154, 155, 156], "to_vec3": 157, "translat": [158, 159], "transpos": [160, 161, 162], "quaternion": 163, "_a": 166, "_b": 166, "_c": 166, "_d": 166, "length": [168, 182, 196, 214], "vector": 176, "_x": [180, 192, 193, 206, 207, 208, 209], "_y": [180, 192, 206, 207], "_xyz": [191, 212], "_z": [192, 194, 206, 210], "_xyzw": 205, "_w": [206, 208, 210, 212], "_yzw": 209}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Getting started": [[0, "getting-started"]], "Get nml": [[0, "get-nml"]], "Add nml to a CMake project": [[0, "add-nml-to-a-cmake-project"]], "Use nml": [[0, "use-nml"]], "nml - Nutshell Mathematics Library": [[1, "nml-nutshell-mathematics-library"]], "Table of Contents": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "nml": [[2, "nml"]], "Matrix": [[3, "matrix"]], "mat2": [[4, "mat2"]], "Class variables": [[4, "class-variables"], [20, "class-variables"], [40, "class-variables"], [164, "class-variables"], [177, "class-variables"], [189, "class-variables"], [203, "class-variables"]], "Class functions": [[4, "class-functions"], [20, "class-functions"], [40, "class-functions"], [164, "class-functions"], [177, "class-functions"], [189, "class-functions"], [203, "class-functions"]], "Constructors": [[4, "constructors"], [20, "constructors"], [40, "constructors"], [164, "constructors"], [177, "constructors"], [189, "constructors"], [203, "constructors"]], "Operators": [[4, "operators"], [4, "id1"], [20, "operators"], [20, "id1"], [40, "operators"], [40, "id1"], [164, "operators"], [164, "id1"], [177, "operators"], [177, "id1"], [189, "operators"], [189, "id1"], [203, "operators"], [203, "id1"]], "Functions": [[4, "functions"], [4, "id2"], [20, "functions"], [20, "id2"], [40, "functions"], [40, "id2"], [164, "functions"], [164, "id2"], [177, "functions"], [177, "id2"], [189, "functions"], [189, "id2"], [203, "functions"], [203, "id2"]], "Namespace functions": [[4, "namespace-functions"], [20, "namespace-functions"], [40, "namespace-functions"], [164, "namespace-functions"], [177, "namespace-functions"], [189, "namespace-functions"], [203, "namespace-functions"]], "mat2: mat2()": [[5, "mat2-mat2"]], "Example": [[5, "example"], [6, "example"], [7, "example"], [8, "example"], [9, "example"], [10, "example"], [11, "example"], [12, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [21, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [28, "example"], [29, "example"], [30, "example"], [31, "example"], [32, "example"], [33, "example"], [34, "example"], [35, "example"], [36, "example"], [37, "example"], [38, "example"], [39, "example"], [41, "example"], [42, "example"], [43, "example"], [44, "example"], [45, "example"], [46, "example"], [47, "example"], [48, "example"], [49, "example"], [50, "example"], [51, "example"], [52, "example"], [53, "example"], [54, "example"], [55, "example"], [56, "example"], [57, "example"], [58, "example"], [59, "example"], [60, "example"], [61, "example"], [62, "example"], [63, "example"], [64, "example"], [65, "example"], [66, "example"], [67, "example"], [68, "example"], [69, "example"], [70, "example"], [71, "example"], [72, "example"], [73, "example"], [74, "example"], [75, "example"], [76, "example"], [77, "example"], [78, "example"], [79, "example"], [80, "example"], [81, "example"], [82, "example"], [83, "example"], [84, "example"], [85, "example"], [86, "example"], [87, "example"], [88, "example"], [89, "example"], [90, "example"], [91, "example"], [92, "example"], [93, "example"], [94, "example"], [95, "example"], [96, "example"], [97, "example"], [98, "example"], [99, "example"], [100, "example"], [101, "example"], [102, "example"], [103, "example"], [104, "example"], [105, "example"], [106, "example"], [107, "example"], [108, "example"], [109, "example"], [110, "example"], [111, "example"], [112, "example"], [113, "example"], [114, "example"], [115, "example"], [116, "example"], [117, "example"], [118, "example"], [119, "example"], [120, "example"], [121, "example"], [122, "example"], [123, "example"], [124, "example"], [125, "example"], [126, "example"], [127, "example"], [128, "example"], [129, "example"], [130, "example"], [131, "example"], [132, "example"], [133, "example"], [134, "example"], [135, "example"], [136, "example"], [137, "example"], [138, "example"], [139, "example"], [140, "example"], [141, "example"], [142, "example"], [143, "example"], [144, "example"], [145, "example"], [146, "example"], [147, "example"], [148, "example"], [149, "example"], [150, "example"], [151, "example"], [152, "example"], [153, "example"], [154, "example"], [155, "example"], [156, "example"], [157, "example"], [158, "example"], [159, "example"], [160, "example"], [161, "example"], [162, "example"], [165, "example"], [166, "example"], [167, "example"], [168, "example"], [169, "example"], [170, "example"], [171, "example"], [172, "example"], [173, "example"], [174, "example"], [175, "example"], [178, "example"], [179, "example"], [180, "example"], [181, "example"], [182, "example"], [183, "example"], [184, "example"], [185, "example"], [186, "example"], [187, "example"], [188, "example"], [190, "example"], [191, "example"], [192, "example"], [193, "example"], [194, "example"], [195, "example"], [196, "example"], [197, "example"], [198, "example"], [199, "example"], [200, "example"], [201, "example"], [202, "example"], [204, "example"], [205, "example"], [206, "example"], [207, "example"], [208, "example"], [209, "example"], [210, "example"], [211, "example"], [212, "example"], [213, "example"], [214, "example"], [215, "example"], [216, "example"], [217, "example"], [218, "example"], [219, "example"], [220, "example"]], "mat2: mat2(float _xxxyyxyy)": [[6, "mat2-mat2-float-xxxyyxyy"]], "mat2: mat2(float _xx, float _xy, float _yx, float _yy)": [[7, "mat2-mat2-float-xx-float-xy-float-yx-float-yy"]], "mat2: mat2(float _xx, float _xy, nlm::vec2 _yxyy)": [[8, "mat2-mat2-float-xx-float-xy-nlm-vec2-yxyy"]], "mat2: mat2(nlm::vec2 _xxxy, float _yx, float _yy)": [[9, "mat2-mat2-nlm-vec2-xxxy-float-yx-float-yy"]], "mat2: mat2(nlm::vec2 _xxxy, nlm::vec2 _yxyy)": [[10, "mat2-mat2-nlm-vec2-xxxy-nlm-vec2-yxyy"]], "mat2: float* data()": [[11, "mat2-float-data"]], "mat2: float det() const": [[12, "mat2-float-det-const"]], "mat2: nml::mat2& operator[](size_t index)": [[13, "mat2-nml-mat2-operator-size-t-index"]], "mat2: const nml::mat2& operator[](size_t index) const": [[14, "mat2-const-nml-mat2-operator-size-t-index-const"]], "mat2: nml::mat2& operator/=(const float other)": [[15, "mat2-nml-mat2-operator-const-float-other"]], "mat2: nml::mat2& operator-=(const nml::mat2& other)": [[16, "mat2-nml-mat2-operator-const-nml-mat2-other"]], "mat2: nml::mat2& operator+=(const nml::mat2& other)": [[17, "mat2-nml-mat2-operator-const-nml-mat2-other"]], "mat2: nml::mat2& operator*=(const float other)": [[18, "mat2-nml-mat2-operator-const-float-other"]], "mat2: nml::mat2& operator*=(const nlm::mat2& other)": [[19, "mat2-nml-mat2-operator-const-nlm-mat2-other"]], "mat3": [[20, "mat3"]], "mat3: mat3()": [[21, "mat3-mat3"]], "mat3: mat3(float _xxxyxzyxyyyzzxzyzz)": [[22, "mat3-mat3-float-xxxyxzyxyyyzzxzyzz"]], "mat3: mat3(float _xx, float _xy, float _xz, float _yx, float _yy, float _yz, float _zx, float _zy, float _zz)": [[23, "mat3-mat3-float-xx-float-xy-float-xz-float-yx-float-yy-float-yz-float-zx-float-zy-float-zz"]], "mat3: mat3(float _xx, float _xy, float _xz, float _yx, float _yy, float _yz, nml::vec3 _zxzyzz)": [[24, "mat3-mat3-float-xx-float-xy-float-xz-float-yx-float-yy-float-yz-nml-vec3-zxzyzz"]], "mat3: mat3(float _xx, float _xy, float _xz, nml::vec3 _yxyyyz, float _zx, float _zy, float _zz)": [[25, "mat3-mat3-float-xx-float-xy-float-xz-nml-vec3-yxyyyz-float-zx-float-zy-float-zz"]], "mat3: mat3(float _xx, float _xy, float _xz, nml::vec3 _yxyyyz, nml::vec3 _zxzyzz)": [[26, "mat3-mat3-float-xx-float-xy-float-xz-nml-vec3-yxyyyz-nml-vec3-zxzyzz"]], "mat3: mat3(nml::vec3 _xxxyxz, float _yy, float _yz, float _zx, float _zy, float _zz)": [[27, "mat3-mat3-nml-vec3-xxxyxz-float-yy-float-yz-float-zx-float-zy-float-zz"]], "mat3: mat3(nml::vec3 _xxxyxz, float _yx, float _yy, float _yz, nml::vec3 _zxzyzz)": [[28, "mat3-mat3-nml-vec3-xxxyxz-float-yx-float-yy-float-yz-nml-vec3-zxzyzz"]], "mat3: mat3(nml::vec3 _xxxyxz, nml::vec3 _yxyyyz, float _zx, float _zy, float _zz)": [[29, "mat3-mat3-nml-vec3-xxxyxz-nml-vec3-yxyyyz-float-zx-float-zy-float-zz"]], "mat3: mat3(nml::vec3 _xxxyxz, nml::vec3 _yxyyyz, nml::vec3 _zxzyzz)": [[30, "mat3-mat3-nml-vec3-xxxyxz-nml-vec3-yxyyyz-nml-vec3-zxzyzz"]], "mat3: float* data()": [[31, "mat3-float-data"]], "mat3: float det() const": [[32, "mat3-float-det-const"]], "mat3: nml::mat3& operator[](size_t index)": [[33, "mat3-nml-mat3-operator-size-t-index"]], "mat3: const nml::mat3& operator[](size_t index) const": [[34, "mat3-const-nml-mat3-operator-size-t-index-const"]], "mat3: nml::mat3& operator/=(const float other)": [[35, "mat3-nml-mat3-operator-const-float-other"]], "mat3: nml::mat3& operator-=(const nml::mat3& other)": [[36, "mat3-nml-mat3-operator-const-nml-mat3-other"]], "mat3: nml::mat3& operator+=(const nml::mat3& other)": [[37, "mat3-nml-mat3-operator-const-nml-mat3-other"]], "mat3: nml::mat3& operator*=(const float other)": [[38, "mat3-nml-mat3-operator-const-float-other"]], "mat3: nml::mat3& operator*=(const nlm::mat3& other)": [[39, "mat3-nml-mat3-operator-const-nlm-mat3-other"]], "mat4": [[40, "mat4"]], "mat4: mat4()": [[41, "mat4-mat4"]], "mat4: mat4(float _xxxyxzxwyxyyyzywzxzyzzzwwxwywzww)": [[42, "mat4-mat4-float-xxxyxzxwyxyyyzywzxzyzzzwwxwywzww"]], "mat4: mat4(float _xx, float _xy, float _xz, float _xw, float _yx, float _yy, float _yz, float _yw, float _zx, float _zy, float _zz, float _zw, float _wx, float _wy, float _wz, float _ww)": [[43, "mat4-mat4-float-xx-float-xy-float-xz-float-xw-float-yx-float-yy-float-yz-float-yw-float-zx-float-zy-float-zz-float-zw-float-wx-float-wy-float-wz-float-ww"], [54, "mat4-mat4-float-xx-float-xy-float-xz-float-xw-float-yx-float-yy-float-yz-float-yw-float-zx-float-zy-float-zz-float-zw-float-wx-float-wy-float-wz-float-ww"]], "mat4: mat4(float _xx, float _xy, float _xz, float _xw, float _yx, float _yy, float _yz, float _yw, float _zx, float _zy, float _zz, float _zw, nml::vec4 _wxwywzww)": [[44, "mat4-mat4-float-xx-float-xy-float-xz-float-xw-float-yx-float-yy-float-yz-float-yw-float-zx-float-zy-float-zz-float-zw-nml-vec4-wxwywzww"]], "mat4: mat4(float _xx, float _xy, float _xz, float _xw, float _yx, float _yy, float _yz, float _yw, nml::vec4 _zxzyzzzw, float _wx, float _wy, float _wz, float _ww)": [[45, "mat4-mat4-float-xx-float-xy-float-xz-float-xw-float-yx-float-yy-float-yz-float-yw-nml-vec4-zxzyzzzw-float-wx-float-wy-float-wz-float-ww"]], "mat4: mat4(float _xx, float _xy, float _xz, float _xw, float _yx, float _yy, float _yz, float _yw, nml::vec4 _zxzyzzzw, nml::vec4 _wxwywzww)": [[46, "mat4-mat4-float-xx-float-xy-float-xz-float-xw-float-yx-float-yy-float-yz-float-yw-nml-vec4-zxzyzzzw-nml-vec4-wxwywzww"]], "mat4: mat4(float _xx, float _xy, float _xz, float _xw, nml::vec4 _yxyyyzyw, float _zx, float _zy, float _zz, float _zw, float _wx, float _wy, float _wz, float _ww)": [[47, "mat4-mat4-float-xx-float-xy-float-xz-float-xw-nml-vec4-yxyyyzyw-float-zx-float-zy-float-zz-float-zw-float-wx-float-wy-float-wz-float-ww"]], "mat4: mat4(float _xx, float _xy, float _xz, float _xw, nml::vec4 _yxyyyzyw, float _zx, float _zy, float _zz, float _zw, nml::vec4 _wxwywzww)": [[48, "mat4-mat4-float-xx-float-xy-float-xz-float-xw-nml-vec4-yxyyyzyw-float-zx-float-zy-float-zz-float-zw-nml-vec4-wxwywzww"]], "mat4: mat4(float _xx, float _xy, float _xz, float _xw, nml::vec4 _yxyyyzyw, nml::vec4 _zxzyzzzw, float _wx, float _wy, float _wz, float _ww)": [[49, "mat4-mat4-float-xx-float-xy-float-xz-float-xw-nml-vec4-yxyyyzyw-nml-vec4-zxzyzzzw-float-wx-float-wy-float-wz-float-ww"]], "mat4: mat4(float _xx, float _xy, float _xz, float _xw, nml::vec4 _yxyyyzyw, nml::vec4 _zxzyzzzw, nml::vec4 _wxwywzww)": [[50, "mat4-mat4-float-xx-float-xy-float-xz-float-xw-nml-vec4-yxyyyzyw-nml-vec4-zxzyzzzw-nml-vec4-wxwywzww"]], "mat4: mat4(nml::vec4 _xxxyxzxw, float _yx, float _yy, float _yz, float _yw, float _zx, float _zy, float _zz, float _zw, float _wx, float _wy, float _wz, float _ww)": [[51, "mat4-mat4-nml-vec4-xxxyxzxw-float-yx-float-yy-float-yz-float-yw-float-zx-float-zy-float-zz-float-zw-float-wx-float-wy-float-wz-float-ww"]], "mat4: mat4(nml::vec4 _xxxyxzxw, float _yx, float _yy, float _yz, float _yw, float _zx, float _zy, float _zz, float _zw, nml::vec4 _wxwywzww)": [[52, "mat4-mat4-nml-vec4-xxxyxzxw-float-yx-float-yy-float-yz-float-yw-float-zx-float-zy-float-zz-float-zw-nml-vec4-wxwywzww"]], "mat4: mat4(nml::vec4 _xxxyxzxw, float _yx, float _yy, float _yz, float _yw, nml::vec4 _zxzyzzzw, float _wx, float _wy, float _wz, float _ww)": [[53, "mat4-mat4-nml-vec4-xxxyxzxw-float-yx-float-yy-float-yz-float-yw-nml-vec4-zxzyzzzw-float-wx-float-wy-float-wz-float-ww"]], "mat4: mat4(nml::vec4 _xxxyxzxw, nml::vec4 _yxyyyzyw, float _zx, float _zy, float _zz, float _zw, float _wx, float _wy, float _wz, float _ww)": [[55, "mat4-mat4-nml-vec4-xxxyxzxw-nml-vec4-yxyyyzyw-float-zx-float-zy-float-zz-float-zw-float-wx-float-wy-float-wz-float-ww"]], "mat4: mat4(nml::vec4 _xxxyxzxw, nml::vec4 _yxyyyzyw, float _zx, float _zy, float _zz, float _zw, nml::vec4 _wxwywzww)": [[56, "mat4-mat4-nml-vec4-xxxyxzxw-nml-vec4-yxyyyzyw-float-zx-float-zy-float-zz-float-zw-nml-vec4-wxwywzww"]], "mat4: mat4(nml::vec4 _xxxyxzxw, nml::vec4 _yxyyyzyw, nml::vec4 _zxzyzzzw, float _wx, float _wy, float _wz, float _ww)": [[57, "mat4-mat4-nml-vec4-xxxyxzxw-nml-vec4-yxyyyzyw-nml-vec4-zxzyzzzw-float-wx-float-wy-float-wz-float-ww"]], "mat4: mat4(nml::vec4 _xxxyxzxw, nml::vec4 _yxyyyzyw, nml::vec4 _zxzyzzzw, nml::vec4 _wxwywzww)": [[58, "mat4-mat4-nml-vec4-xxxyxzxw-nml-vec4-yxyyyzyw-nml-vec4-zxzyzzzw-nml-vec4-wxwywzww"]], "mat4: float* data()": [[59, "mat4-float-data"]], "mat4: float det() const": [[60, "mat4-float-det-const"]], "mat4: nml::mat4& operator[](size_t index)": [[61, "mat4-nml-mat4-operator-size-t-index"]], "mat4: const nml::mat4& operator[](size_t index) const": [[62, "mat4-const-nml-mat4-operator-size-t-index-const"]], "mat4: nml::mat4& operator/=(const float other)": [[63, "mat4-nml-mat4-operator-const-float-other"]], "mat4: nml::mat4& operator-=(const nml::mat4& other)": [[64, "mat4-nml-mat4-operator-const-nml-mat4-other"]], "mat4: nml::mat4& operator+=(const nml::mat4& other)": [[65, "mat4-nml-mat4-operator-const-nml-mat4-other"]], "mat4: nml::mat4& operator*=(const float other)": [[66, "mat4-nml-mat4-operator-const-float-other"]], "mat4: nml::mat4& operator*=(const nlm::mat4& other)": [[67, "mat4-nml-mat4-operator-const-nlm-mat4-other"]], "nml::quat nml::conjugate(const nml::quat& qua)": [[68, "nml-quat-nml-conjugate-const-nml-quat-qua"]], "nml::vec3 nml::cross(const nml::vec3& a, const nml::vec3& b)": [[69, "nml-vec3-nml-cross-const-nml-vec3-a-const-nml-vec3-b"]], "float nml::dot(const nml::vec2& a, const nml::vec2& b)": [[70, "float-nml-dot-const-nml-vec2-a-const-nml-vec2-b"]], "float nml::dot(const nml::vec3& a, const nml::vec3& b)": [[71, "float-nml-dot-const-nml-vec3-a-const-nml-vec3-b"]], "float nml::dot(const nml::vec4& a, const nml::vec4& b)": [[72, "float-nml-dot-const-nml-vec4-a-const-nml-vec4-b"]], "nml::mat2 inverse(const nml::mat2& mat)": [[73, "nml-mat2-inverse-const-nml-mat2-mat"]], "nml::mat3 inverse(const nml::mat3& mat)": [[74, "nml-mat3-inverse-const-nml-mat3-mat"]], "nml::mat4 inverse(const nml::mat4& mat)": [[75, "nml-mat4-inverse-const-nml-mat4-mat"]], "nml::mat4 lookAtLH(const nml::vec3& from, const nml::vec3& to, const nml::vec3& up)": [[76, "nml-mat4-lookatlh-const-nml-vec3-from-const-nml-vec3-to-const-nml-vec3-up"]], "nml::mat4 lookAtRH(const nml::vec3& from, const nml::vec3& to, const nml::vec3& up)": [[77, "nml-mat4-lookatrh-const-nml-vec3-from-const-nml-vec3-to-const-nml-vec3-up"]], "nml::quat nml::normalize(const nml::quat& qua)": [[78, "nml-quat-nml-normalize-const-nml-quat-qua"]], "nml::vec2 nml::normalize(const nml::vec2& vec)": [[79, "nml-vec2-nml-normalize-const-nml-vec2-vec"]], "nml::vec3 nml::normalize(const nml::vec3& vec)": [[80, "nml-vec3-nml-normalize-const-nml-vec3-vec"]], "nml::vec4 nml::normalize(const nml::vec4& vec)": [[81, "nml-vec4-nml-normalize-const-nml-vec4-vec"]], "nml::mat2 operator/(nml::mat2 lhs, const float rhs)": [[82, "nml-mat2-operator-nml-mat2-lhs-const-float-rhs"]], "nml::mat3 operator/(nml::mat3 lhs, const float rhs)": [[83, "nml-mat3-operator-nml-mat3-lhs-const-float-rhs"]], "nml::mat4 operator/(nml::mat4 lhs, const float rhs)": [[84, "nml-mat4-operator-nml-mat4-lhs-const-float-rhs"]], "nml::quat operator/(nml::quat lhs, const float rhs)": [[85, "nml-quat-operator-nml-quat-lhs-const-float-rhs"]], "nml::vec2 operator/(nml::vec2 lhs, const float rhs)": [[86, "nml-vec2-operator-nml-vec2-lhs-const-float-rhs"]], "nml::vec3 operator/(nml::vec3 lhs, const float rhs)": [[87, "nml-vec3-operator-nml-vec3-lhs-const-float-rhs"]], "nml::vec4 operator/(nml::vec4 lhs, const float rhs)": [[88, "nml-vec4-operator-nml-vec4-lhs-const-float-rhs"]], "bool operator==(const nml::mat2& lhs, const nml::mat2& rhs)": [[89, "bool-operator-const-nml-mat2-lhs-const-nml-mat2-rhs"]], "bool operator==(const nml::mat3& lhs, const nml::mat3& rhs)": [[90, "bool-operator-const-nml-mat3-lhs-const-nml-mat3-rhs"]], "bool operator==(const nml::mat4& lhs, const nml::mat4& rhs)": [[91, "bool-operator-const-nml-mat4-lhs-const-nml-mat4-rhs"]], "bool operator==(const nml::quat& lhs, const nml::quat& rhs)": [[92, "bool-operator-const-nml-quat-lhs-const-nml-quat-rhs"]], "bool operator==(const nml::vec2& lhs, const nml::vec2& rhs)": [[93, "bool-operator-const-nml-vec2-lhs-const-nml-vec2-rhs"]], "bool operator==(const nml::vec3& lhs, const nml::vec3& rhs)": [[94, "bool-operator-const-nml-vec3-lhs-const-nml-vec3-rhs"]], "bool operator==(const nml::vec4& lhs, const nml::vec4& rhs)": [[95, "bool-operator-const-nml-vec4-lhs-const-nml-vec4-rhs"]], "bool operator!=(const nml::mat2& lhs, const nml::mat2& rhs)": [[96, "bool-operator-const-nml-mat2-lhs-const-nml-mat2-rhs"]], "bool operator!=(const nml::mat3& lhs, const nml::mat3& rhs)": [[97, "bool-operator-const-nml-mat3-lhs-const-nml-mat3-rhs"]], "bool operator!=(const nml::mat4& lhs, const nml::mat4& rhs)": [[98, "bool-operator-const-nml-mat4-lhs-const-nml-mat4-rhs"]], "bool operator!=(const nml::quat& lhs, const nml::quat& rhs)": [[99, "bool-operator-const-nml-quat-lhs-const-nml-quat-rhs"]], "bool operator!=(const nml::vec2& lhs, const nml::vec2& rhs)": [[100, "bool-operator-const-nml-vec2-lhs-const-nml-vec2-rhs"]], "bool operator!=(const nml::vec3& lhs, const nml::vec3& rhs)": [[101, "bool-operator-const-nml-vec3-lhs-const-nml-vec3-rhs"]], "bool operator!=(const nml::vec4& lhs, const nml::vec4& rhs)": [[102, "bool-operator-const-nml-vec4-lhs-const-nml-vec4-rhs"]], "nml::mat2 operator-(nml::mat2 lhs, const nml::mat2& rhs)": [[103, "nml-mat2-operator-nml-mat2-lhs-const-nml-mat2-rhs"]], "nml::mat3 operator-(nml::mat3 lhs, const nml::mat3& rhs)": [[104, "nml-mat3-operator-nml-mat3-lhs-const-nml-mat3-rhs"]], "nml::mat4 operator-(nml::mat4 lhs, const nml::mat4& rhs)": [[105, "nml-mat4-operator-nml-mat4-lhs-const-nml-mat4-rhs"]], "nml::quat operator-(nml::quat lhs, const nml::quat& rhs)": [[106, "nml-quat-operator-nml-quat-lhs-const-nml-quat-rhs"]], "nml::vec2 operator-(nml::vec2 lhs, const nml::vec2& rhs)": [[107, "nml-vec2-operator-nml-vec2-lhs-const-nml-vec2-rhs"]], "nml::vec3 operator-(nml::vec3 lhs, const nml::vec3& rhs)": [[108, "nml-vec3-operator-nml-vec3-lhs-const-nml-vec3-rhs"]], "nml::vec4 operator-(nml::vec4 lhs, const nml::vec4& rhs)": [[109, "nml-vec4-operator-nml-vec4-lhs-const-nml-vec4-rhs"]], "nml::mat2 operator+(nml::mat2 lhs, const nml::mat2& rhs)": [[110, "nml-mat2-operator-nml-mat2-lhs-const-nml-mat2-rhs"]], "nml::mat3 operator+(nml::mat3 lhs, const nml::mat3& rhs)": [[111, "nml-mat3-operator-nml-mat3-lhs-const-nml-mat3-rhs"]], "nml::mat4 operator+(nml::mat4 lhs, const nml::mat4& rhs)": [[112, "nml-mat4-operator-nml-mat4-lhs-const-nml-mat4-rhs"]], "nml::quat operator+(nml::quat lhs, const nml::quat& rhs)": [[113, "nml-quat-operator-nml-quat-lhs-const-nml-quat-rhs"]], "nml::vec2 operator+(nml::vec2 lhs, const nml::vec2& rhs)": [[114, "nml-vec2-operator-nml-vec2-lhs-const-nml-vec2-rhs"]], "nml::vec3 operator+(nml::vec3 lhs, const nml::vec3& rhs)": [[115, "nml-vec3-operator-nml-vec3-lhs-const-nml-vec3-rhs"]], "nml::vec4 operator+(nml::vec4 lhs, const nml::vec4& rhs)": [[116, "nml-vec4-operator-nml-vec4-lhs-const-nml-vec4-rhs"]], "nml::mat2 operator*(float lhs, const nml::mat2& rhs)": [[117, "nml-mat2-operator-float-lhs-const-nml-mat2-rhs"]], "nml::mat3 operator*(float lhs, const nml::mat3& rhs)": [[118, "nml-mat3-operator-float-lhs-const-nml-mat3-rhs"]], "nml::mat4 operator*(float lhs, const nml::mat4& rhs)": [[119, "nml-mat4-operator-float-lhs-const-nml-mat4-rhs"]], "nml::quat operator*(float lhs, const nml::quat& rhs)": [[120, "nml-quat-operator-float-lhs-const-nml-quat-rhs"]], "nml::vec2 operator*(float lhs, const nml::vec2& rhs)": [[121, "nml-vec2-operator-float-lhs-const-nml-vec2-rhs"]], "nml::vec3 operator*(float lhs, const nml::vec3& rhs)": [[122, "nml-vec3-operator-float-lhs-const-nml-vec3-rhs"]], "nml::vec4 operator*(float lhs, const nml::vec4& rhs)": [[123, "nml-vec4-operator-float-lhs-const-nml-vec4-rhs"]], "nml::mat2 operator*(nml::mat2 lhs, const float rhs)": [[124, "nml-mat2-operator-nml-mat2-lhs-const-float-rhs"]], "nml::mat2 operator*(nml::mat2 lhs, const nml::mat2& rhs)": [[125, "nml-mat2-operator-nml-mat2-lhs-const-nml-mat2-rhs"]], "nml::vec2 operator*(nml::mat2 lhs, const nml::vec2& rhs)": [[126, "nml-vec2-operator-nml-mat2-lhs-const-nml-vec2-rhs"]], "nml::mat3 operator*(nml::mat3 lhs, const float rhs)": [[127, "nml-mat3-operator-nml-mat3-lhs-const-float-rhs"]], "nml::mat3 operator*(nml::mat3 lhs, const nml::mat3& rhs)": [[128, "nml-mat3-operator-nml-mat3-lhs-const-nml-mat3-rhs"]], "nml::vec3 operator*(nml::mat3 lhs, const nml::vec3& rhs)": [[129, "nml-vec3-operator-nml-mat3-lhs-const-nml-vec3-rhs"]], "nml::mat4 operator*(nml::mat4 lhs, const float rhs)": [[130, "nml-mat4-operator-nml-mat4-lhs-const-float-rhs"]], "nml::mat4 operator*(nml::mat4 lhs, const nml::mat4& rhs)": [[131, "nml-mat4-operator-nml-mat4-lhs-const-nml-mat4-rhs"]], "nml::vec4 operator*(nml::mat4 lhs, const nml::vec4& rhs)": [[132, "nml-vec4-operator-nml-mat4-lhs-const-nml-vec4-rhs"]], "nml::quat operator*(nml::quat lhs, const float rhs)": [[133, "nml-quat-operator-nml-quat-lhs-const-float-rhs"]], "nml::quat operator*(nml::quat lhs, const nml::quat& rhs)": [[134, "nml-quat-operator-nml-quat-lhs-const-nml-quat-rhs"]], "nml::vec2 operator*(nml::vec2 lhs, const float rhs)": [[135, "nml-vec2-operator-nml-vec2-lhs-const-float-rhs"]], "nml::vec3 operator*(nml::vec3 lhs, const float rhs)": [[136, "nml-vec3-operator-nml-vec3-lhs-const-float-rhs"]], "nml::vec4 operator*(nml::vec4 lhs, const float rhs)": [[137, "nml-vec4-operator-nml-vec4-lhs-const-float-rhs"]], "nml::vec2 nml::reflect(const nml::vec2& i, const nml::vec2& n)": [[138, "nml-vec2-nml-reflect-const-nml-vec2-i-const-nml-vec2-n"]], "nml::vec3 nml::reflect(const nml::vec3& i, const nml::vec3& n)": [[139, "nml-vec3-nml-reflect-const-nml-vec3-i-const-nml-vec3-n"]], "nml::vec4 nml::reflect(const nml::vec4& i, const nml::vec4& n)": [[140, "nml-vec4-nml-reflect-const-nml-vec4-i-const-nml-vec4-n"]], "nml::vec2 nml::refract(const nml::vec2& i, const nml::vec2& n, float ior)": [[141, "nml-vec2-nml-refract-const-nml-vec2-i-const-nml-vec2-n-float-ior"]], "nml::vec3 nml::refract(const nml::vec3& i, const nml::vec3& n, float ior)": [[142, "nml-vec3-nml-refract-const-nml-vec3-i-const-nml-vec3-n-float-ior"]], "nml::vec4 nml::refract(const nml::vec4& i, const nml::vec4& n, float ior)": [[143, "nml-vec4-nml-refract-const-nml-vec4-i-const-nml-vec4-n-float-ior"]], "nml::mat3 rotate(const float angle)": [[144, "nml-mat3-rotate-const-float-angle"]], "nml::mat4 rotate(const float angle, const nml::vec3& axis)": [[145, "nml-mat4-rotate-const-float-angle-const-nml-vec3-axis"]], "nml::mat3 scale(const nml::vec2& scaling)": [[146, "nml-mat3-scale-const-nml-vec2-scaling"]], "nml::mat4 scale(const nml::vec3& scaling)": [[147, "nml-mat4-scale-const-nml-vec3-scaling"]], "nml::mat4 nml::to_mat4(const nml::quat& qua)": [[148, "nml-mat4-nml-to-mat4-const-nml-quat-qua"]], "nml::quat nml::to_quat(const nml::vec3& vec)": [[149, "nml-quat-nml-to-quat-const-nml-vec3-vec"]], "std::string nml::to_string(const nml::mat2& vec)": [[150, "std-string-nml-to-string-const-nml-mat2-vec"]], "std::string nml::to_string(const nml::mat3& vec)": [[151, "std-string-nml-to-string-const-nml-mat3-vec"]], "std::string nml::to_string(const nml::mat4& vec)": [[152, "std-string-nml-to-string-const-nml-mat4-vec"]], "std::string nml::to_string(const nml::quat& vec)": [[153, "std-string-nml-to-string-const-nml-quat-vec"]], "std::string nml::to_string(const nml::vec2& vec)": [[154, "std-string-nml-to-string-const-nml-vec2-vec"]], "std::string nml::to_string(const nml::vec3& vec)": [[155, "std-string-nml-to-string-const-nml-vec3-vec"]], "std::string nml::to_string(const nml::vec4& vec)": [[156, "std-string-nml-to-string-const-nml-vec4-vec"]], "nml::vec3 nml::to_vec3(const nml::quat& qua)": [[157, "nml-vec3-nml-to-vec3-const-nml-quat-qua"]], "nml::mat3 translate(const nml::vec2& translation)": [[158, "nml-mat3-translate-const-nml-vec2-translation"]], "nml::mat4 translate(const nml::vec3& translation)": [[159, "nml-mat4-translate-const-nml-vec3-translation"]], "nml::mat2 transpose(const nml::mat2& mat)": [[160, "nml-mat2-transpose-const-nml-mat2-mat"]], "nml::mat3 transpose(const nml::mat3& mat)": [[161, "nml-mat3-transpose-const-nml-mat3-mat"]], "nml::mat4 transpose(const nml::mat4& mat)": [[162, "nml-mat4-transpose-const-nml-mat4-mat"]], "Quaternion": [[163, "quaternion"]], "quat": [[164, "quat"]], "quat: quat()": [[165, "quat-quat"]], "quat: quat(float _a, float _b, float _c, float _d)": [[166, "quat-quat-float-a-float-b-float-c-float-d"]], "quat: float* data()": [[167, "quat-float-data"]], "quat: float length()": [[168, "quat-float-length"]], "quat: float& operator[](size_t index)": [[169, "quat-float-operator-size-t-index"]], "quat: const float operator[](size_t index) const": [[170, "quat-const-float-operator-size-t-index-const"]], "quat: nml::quat& operator/=(const float other)": [[171, "quat-nml-quat-operator-const-float-other"]], "quat: nml::quat& operator-=(const nml::quat& other)": [[172, "quat-nml-quat-operator-const-nml-quat-other"]], "quat: nml::quat& operator+=(const nml::quat& other)": [[173, "quat-nml-quat-operator-const-nml-quat-other"]], "quat: nml::quat& operator*=(const float other)": [[174, "quat-nml-quat-operator-const-float-other"]], "quat: nml::quat& operator*=(const nml::quat& other)": [[175, "quat-nml-quat-operator-const-nml-quat-other"]], "Vector": [[176, "vector"]], "vec2": [[177, "vec2"]], "vec2: vec2()": [[178, "vec2-vec2"]], "vec2: vec2(float _xy)": [[179, "vec2-vec2-float-xy"]], "vec2: vec2(float _x, float _y)": [[180, "vec2-vec2-float-x-float-y"]], "vec2: float* data()": [[181, "vec2-float-data"]], "vec2: float length()": [[182, "vec2-float-length"]], "vec2: float& operator[](size_t index)": [[183, "vec2-float-operator-size-t-index"]], "vec2: const float operator[](size_t index) const": [[184, "vec2-const-float-operator-size-t-index-const"]], "vec2: nml::vec2& operator/=(const float other)": [[185, "vec2-nml-vec2-operator-const-float-other"]], "vec2: nml::vec2& operator-=(const nml::vec2& other)": [[186, "vec2-nml-vec2-operator-const-nml-vec2-other"]], "vec2: nml::vec2& operator+=(const nml::vec2& other)": [[187, "vec2-nml-vec2-operator-const-nml-vec2-other"]], "vec2: nml::vec2& operator*=(const float other)": [[188, "vec2-nml-vec2-operator-const-float-other"]], "vec3": [[189, "vec3"]], "vec3: vec3()": [[190, "vec3-vec3"]], "vec3: vec3(float _xyz)": [[191, "vec3-vec3-float-xyz"]], "vec3: vec3(float _x, float _y, float _z)": [[192, "vec3-vec3-float-x-float-y-float-z"]], "vec3: vec3(float _x, nml::vec2 _yz)": [[193, "vec3-vec3-float-x-nml-vec2-yz"]], "vec3: vec3(nml::vec2 _xy, float _z)": [[194, "vec3-vec3-nml-vec2-xy-float-z"]], "vec3: float* data()": [[195, "vec3-float-data"]], "vec3: float length()": [[196, "vec3-float-length"]], "vec3: float& operator[](size_t index)": [[197, "vec3-float-operator-size-t-index"]], "vec3: const float operator[](size_t index) const": [[198, "vec3-const-float-operator-size-t-index-const"]], "vec3: nml::vec3& operator/=(const float other)": [[199, "vec3-nml-vec3-operator-const-float-other"]], "vec3: nml::vec3& operator-=(const nml::vec3& other)": [[200, "vec3-nml-vec3-operator-const-nml-vec3-other"]], "vec3: nml::vec3& operator+=(const nml::vec3& other)": [[201, "vec3-nml-vec3-operator-const-nml-vec3-other"]], "vec3: nml::vec3& operator*=(const float other)": [[202, "vec3-nml-vec3-operator-const-float-other"]], "vec4": [[203, "vec4"]], "vec4: vec4()": [[204, "vec4-vec4"]], "vec4: vec4(float _xyzw)": [[205, "vec4-vec4-float-xyzw"]], "vec4: vec4(float _x, float _y, float _z, float _w)": [[206, "vec4-vec4-float-x-float-y-float-z-float-w"]], "vec4: vec4(float _x, float _y, nlm::vec2 _zw)": [[207, "vec4-vec4-float-x-float-y-nlm-vec2-zw"]], "vec4: vec4(float _x, nlm::vec2 _yz, float _w)": [[208, "vec4-vec4-float-x-nlm-vec2-yz-float-w"]], "vec4: vec4(float _x, nlm::vec3 _yzw)": [[209, "vec4-vec4-float-x-nlm-vec3-yzw"]], "vec4: vec4(nlm::vec2 _xy, float _z, float _w)": [[210, "vec4-vec4-nlm-vec2-xy-float-z-float-w"]], "vec4: vec4(nlm::vec2 _xy, nlm::vec2 _zw)": [[211, "vec4-vec4-nlm-vec2-xy-nlm-vec2-zw"]], "vec4: vec4(nlm::vec3 _xyz, float _w)": [[212, "vec4-vec4-nlm-vec3-xyz-float-w"]], "vec4: float* data()": [[213, "vec4-float-data"]], "vec4: float length()": [[214, "vec4-float-length"]], "vec4: float& operator[](size_t index)": [[215, "vec4-float-operator-size-t-index"]], "vec4: const float operator[](size_t index) const": [[216, "vec4-const-float-operator-size-t-index-const"]], "vec4: nml::vec4& operator/=(const float other)": [[217, "vec4-nml-vec4-operator-const-float-other"]], "vec4: nml::vec4& operator-=(const nml::vec4& other)": [[218, "vec4-nml-vec4-operator-const-nml-vec4-other"]], "vec4: nml::vec4& operator+=(const nml::vec4& other)": [[219, "vec4-nml-vec4-operator-const-nml-vec4-other"]], "vec4: nml::vec4& operator*=(const float other)": [[220, "vec4-nml-vec4-operator-const-float-other"]]}, "indexentries": {}})